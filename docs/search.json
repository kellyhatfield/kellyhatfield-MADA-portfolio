[
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "The data this week comes from Hollywood Age Gap via Data Is Plural."
  },
  {
    "objectID": "tidytuesday_exercise.html#what-we-found-was",
    "href": "tidytuesday_exercise.html#what-we-found-was",
    "title": "Tidy Tuesday Exercise",
    "section": "What we found was…",
    "text": "What we found was…\n\nMen are the older partner in nearly 80% of movies (917 out of 1,132 movies with a man/woman relationship.\nThe average age difference when Men are older is men is 11.7 years\n\nThis is much higher than the average age difference of 5.5 years when women are older\n\nLet’s Make Some Plots\n\n\nscatter_1 <- ggplot(data=movies2)+\n  geom_point(aes(x=Release_Year, y=Age_Difference, color=older), shape = 16,\n             size = 1.5) +\n  theme_classic() + scale_color_manual(values = c(\"blue\", \"gray\",\n                                              \"orange\", \"magenta\")) +\nlabs(title=\"Average Age differences in movie relationships have\\n slightly declined since the 1940s\", \nsubtitle=\"Stratified by Relationship Type\",\nx = \"Movie Release Year\", y = \"Age Difference\", legend=\"Who's Older?\") +\n  geom_smooth(aes(x=Release_Year, y=Age_Difference), \n                        method=lm)\nscatter_1 \n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nlibrary(ggtext)\nmovies_sub <- subset(movies2, older != 'Same Sex Couple')\nscatter_2 <- ggplot() + \n  geom_point(data=movies_sub, aes(x=Age_Woman, y=Age_Man, color=older), \n             shape = 16, size = 1.5) +\n  scale_color_manual(values = c(\"blue\", \"gray\", \"magenta\")) + \n  labs(title=\"Age Gaps in Man-Woman Relationships in Movies\", \n  subtitle=\"In 81% of Films, Men are older\", y= \"Man's Age\", x= \"Woman's Age\") +\n  theme(plot.title = element_markdown(), \n        plot.subtitle=element_markdown(), legend.position=\"none\") +\n  theme_classic()\nscatter_2"
  },
  {
    "objectID": "tidytuesday_exercise.html#relationships-in-movies-feature-extensive-age-gaps-and-men-remain-older-than-their-female-love-interests.",
    "href": "tidytuesday_exercise.html#relationships-in-movies-feature-extensive-age-gaps-and-men-remain-older-than-their-female-love-interests.",
    "title": "Tidy Tuesday Exercise",
    "section": "Relationships in movies feature extensive age gaps, and men remain older than their female love interests.",
    "text": "Relationships in movies feature extensive age gaps, and men remain older than their female love interests.\nHowever, potential decreases in the age gap have been observed since 1940s. Also, there are some increasing numbers of same sex relationships being displayed in movies in more recent years too."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "I am a 3rd year DrPH student in the College of Public Health. I have a MSPH in Biostatistics from Emory University and a BS in Microbiology from Clemson University.\n\n\n\nI currently work as an analytic research epidemiologist in the Division of Healthcare Quality Promotion at CDC. My work centers around analyzing various types of electronic healthcare data to answer important questions about healthcare epidemiology with a specific focus on healthcare-associated infections and antimicrobial resistance.\nSome exciting projects I have historically worked on include coming up with burden estimates for CDC’s Antibiotic Resistance Threats in the United States, 2019 where my team was responsible for calculating burden estimates, attributable cost, and attributable mortality for Multidrug-Resistant Bacterial Infections in U.S. Hospitalized Patients, 2012–2017.\nMost recently, I have a special interest in other non-acute care settings, particularly nursing homes. This was sparked by some of my experiences throughout the COVID-19 pandemic including an early investigation identifying the importance of asymptomatic and presymptomatic infections in SARS-CoV-2 transmission and more recent work estimating vaccine effectiveness in this population.\n\n\n\nI was formally trained in SAS and am a devotee of many years, but I am here in a hope to modernize and expand my knowledge. I am really looking forward to learning R and becoming somewhat comfortable with Git throughout this class. I am hoping to learn some new skills that I can use in my day to day work and for my dissertation.\n\n\n\nIf there was one video I could show many of my young colleagues entering in the field of research, it may be this one\n\n\n\n\nI am a mom of two awesome kiddos while in school with a full time job so.. what is free time?! Whenever I can I love hiking, concerts, and trying new foods with my family."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "For inspiration I chose this chart on fivethirtyeight\n\nI accessed it from this website here.\n\n\nI manually typed the data into a csv file. First, we’ll load the data and some packages\n\nlibrary(readr)\nVisualization_Data <- read_csv(\"Visualization Data.csv\")\n\nRows: 18 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Question, Gender, Response\ndbl (1): Percent\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ dplyr   1.0.10\n✔ tibble  3.1.8      ✔ stringr 1.5.0 \n✔ tidyr   1.3.0      ✔ forcats 0.5.2 \n✔ purrr   1.0.1      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nview(Visualization_Data)\n\nVisualization_Data %>% ggplot()\n\n\n\n\n\n\n\n\nview(Visualization_Data)\n\np<-ggplot(data=Visualization_Data, aes(x=reorder(Gender, Percent), y=Percent, fill=Response)) + \n  geom_bar(stat=\"identity\") + coord_flip() +facet_grid(Question ~ .) +\n  labs(title=\"Parents feel more productive and focused at home\", subtitle=\"Share of global knowledge workers with children who said \\n various aspects of their work were better or worse \\n when working remotely or in-office, by gender.\", \ncaption=\"Based on a survey of 10,420 respondents classified as 'knowledge workers' - or anyone who \\n handles information for a living- and who work full-time, \\n between April 26, and May 6, 2021.\") \np                        \n\n\n\n\n\n\n\n\n#Lets add the caption \nlibrary(shadowtext)\np2 <- p + geom_shadowtext(data=subset(Visualization_Data, Response==\"Same\" & Gender==\"Male\" & Question==\"Ability to focus on work\"),aes(y = Percent, x = Gender, label=\"No Change\"), hjust=0, nudge_x=0.1,color=\"black\",bg.colour=\"white\", size=3) +   scale_fill_manual(values=c(\"orchid3\",\n                             \"white\",\n                             \"darkgreen\")) + theme(axis.title.x=element_blank(), axis.title.y=element_blank(), plot.title=element_text(hjust=-0.2), plot.subtitle=element_text(hjust=-0.2),  plot.caption=element_text(hjust = -0.2), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.ticks.y=element_blank())\n\n\np2\n\n\n\n#              \n\n\n\n\nI really strugged to get the titles on top and add some values to the graph. Per Annabella’s suggestion I am going to try to add some percentage labels.\n\np3 <- p2 + geom_text(data=subset(Visualization_Data, Gender==\"Female\" & Question==\"Ability to focus on work\"),aes(y = 8, x =\"Female\", label=\"15.2% Worse\"),size=2, color=\"white\",bg.colour=\"orchid3\") + geom_text(data=subset(Visualization_Data, Gender==\"Male\" & Question==\"Ability to focus on work\"),aes(y = 5, x =\"Male\", label=\"13.8%\"),size=2, color=\"white\",bg.colour=\"orchid3\") + geom_text(data=subset(Visualization_Data, Gender==\"Female\" & Question==\"Productivity at Work\"),aes(y = 5, x = \"Female\", label=\"15.6%\"),size=2, color=\"white\",bg.colour=\"orchid3\") + geom_text(data=subset(Visualization_Data,  Gender==\"Male\" & Question==\"Productivity at Work\"),aes(y = 5, x = \"Male\", label=\"19.4%\"),size=2, color=\"white\",bg.colour=\"orchid3\")+ geom_text(data=subset(Visualization_Data, Gender==\"Female\" & Question==\"Work-Life Balance\"),aes(y = 5, x = \"Female\", label=\"19.4%\"),size=2, color=\"white\",bg.colour=\"orchid3\") + geom_text(data=subset(Visualization_Data, Gender==\"Male\" & Question==\"Work-Life Balance\"),aes(y = 5, x = \"Male\", label=\"23.1%\"),size=2, color=\"white\",bg.colour=\"orchid3\") + geom_text(data=subset(Visualization_Data, Gender==\"Female\" & Question==\"Ability to focus on work\"),aes(y = 75, x = \"Female\", label=\"64.5% Better\"),size=2, color=\"white\",bg.colour=\"darkgreen\") + geom_text(data=subset(Visualization_Data,  Gender==\"Male\" & Question==\"Ability to focus on work\"),aes(y = 85, x = \"Male\", label=\"69.4%\"),size=2, color=\"white\",bg.colour=\"darkgreen\") + geom_text(data=subset(Visualization_Data, Gender==\"Female\" & Question==\"Productivity at Work\"),aes(y = 85, x = \"Female\", label=\"57.6%\"),size=2, color=\"white\",bg.colour=\"darkgreen\") + geom_text(data=subset(Visualization_Data, Gender==\"Male\" & Question==\"Productivity at Work\"),aes(y = 85, x = \"Male\", label=\"51.5%\"),size=2, color=\"white\",bg.colour=\"darkgreen\")+ geom_text(data=subset(Visualization_Data, Gender==\"Female\" & Question==\"Work-Life Balance\"),aes(y = 85, x = \"Female\", label=\"53.8%\"),size=2, color=\"white\",bg.colour=\"darkgreen\") + geom_text(data=subset(Visualization_Data, Gender==\"Male\" & Question==\"Work-Life Balance\"),aes(y = 85, x = \"Male\", label=\"53.0%\"),size=2, color=\"white\",bg.colour=\"darkgreen\")\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Female\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Male\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Female\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Male\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Female\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Male\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Female\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Male\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Female\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Male\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Female\" & :\nIgnoring unknown parameters: `bg.colour`\n\n\nWarning in geom_text(data = subset(Visualization_Data, Gender == \"Male\" & :\nIgnoring unknown parameters: `bg.colour`\n\np3"
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "",
    "text": "#load dslabs package\nlibrary(\"dslabs\")\n#load ggplot2\nlibrary(ggplot2)\n\n#look at help file for gapminder data\nhelp(gapminder)\n#get an overview of data structure\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n#get a summary of data\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n#determine the type of object gapminder is\nclass(gapminder)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding_exercise.html#r-code-for-data-exploration-and-cleaning",
    "href": "coding_exercise.html#r-code-for-data-exploration-and-cleaning",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "R code for data exploration and cleaning",
    "text": "R code for data exploration and cleaning\n\n#Write code that assigns only the African countries to a new object/variable called africadata. \n\nafricadata = subset(gapminder, continent=='Africa')\n\n#Run str and summary on the new object you created.\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n#We now have 2907 observations, down from 10545. Depending on how you do this, you might also notice that all the different categories are still kept in the continent (and other) variables, but show 0.\n\n#Take the africadata object and create two new objects (name them whatever you want)\n\n#Object 1 contains only infant_mortality and life_expectancy\n\nmyvars1 <- c(\"infant_mortality\",\"life_expectancy\")\nobject1 <- africadata[myvars1]\nstr(object1)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(object1)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n# Object2 contains only population and life_expectancy. \n\nmyvars2 <- c(\"population\",\"life_expectancy\")\nobject2 <- africadata[myvars2]\nstr(object2)\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(object2)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51                         \n\n#Plot the data as points.\n#Object 1\nggplot(object1, aes(x=infant_mortality, y=life_expectancy)) +geom_point()\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n#Object2\np<- ggplot(object2, aes(x=population, y=life_expectancy)) +geom_point()\np + scale_x_continuous(trans = 'log10')\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n#Looking at code for years with missing infant mortality\nmissing_mortality = subset(africadata, is.na(infant_mortality)) \ntable(missing_mortality$year)\n\n\n1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 \n  10   17   16   16   15   14   13   11   11    7    5    6    6    6    5    5 \n1976 1977 1978 1979 1980 1981 2016 \n   3    3    2    2    1    1   51"
  },
  {
    "objectID": "coding_exercise.html#plotting-and-analyzing-data-from-african-countries-in-2000",
    "href": "coding_exercise.html#plotting-and-analyzing-data-from-african-countries-in-2000",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "Plotting and Analyzing Data from African Countries in 2000",
    "text": "Plotting and Analyzing Data from African Countries in 2000\n\n#New Object just for Year=2000\nafricadata_2000 = subset(africadata, year==2000) \nstr(africadata_2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata_2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n#More Plotting\n#Infant Mortality and Life Expectancy in 2000;\nggplot(africadata_2000, aes(x=infant_mortality, y=life_expectancy)) +geom_point()\n\n\n\n#Population and Life Expectancy in 2000; \np2<- ggplot(africadata_2000, aes(x=population, y=life_expectancy)) +geom_point()\np2 + scale_x_continuous(trans = 'log10')\n\n\n\n#Statistics\n#fit linear regression model using 'x' as predictor and 'y' as response variable\nfit1 = lm(life_expectancy~infant_mortality, data=africadata_2000)\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africadata_2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      71.29331    2.42611  29.386  < 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\nfit2 = lm(life_expectancy~population, data=africadata_2000)\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = africadata_2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   <2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159"
  },
  {
    "objectID": "coding_exercise.html#conclusions",
    "href": "coding_exercise.html#conclusions",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "Conclusions",
    "text": "Conclusions\nWe determined that in a simple linear regression that increased life expectancy is associated with linear trend in decreased infant mortality for African countries in the year 2000. However, population size does not appear to have a linear relationship with life expectancy."
  },
  {
    "objectID": "coding_exercise.html#preparing-the-data",
    "href": "coding_exercise.html#preparing-the-data",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "Preparing the Data",
    "text": "Preparing the Data\nFirst I’m going to see if all the data for these variables is still available for year 2000.\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.3.0      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n✔ purrr   1.0.1      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nafricadata%>%\n  filter(year ==2000, \n         is.na(fertility)) #no data is missing for fertility in 2000, so we can still use this data.\n\n[1] country          year             infant_mortality life_expectancy \n[5] fertility        population       gdp              continent       \n[9] region          \n<0 rows> (or 0-length row.names)\n\nhead(africadata_2000)#Kelly's created Africa 2000 data\n\n          country year infant_mortality life_expectancy fertility population\n7402      Algeria 2000             33.9            73.3      2.51   31183658\n7403       Angola 2000            128.3            52.3      6.84   15058638\n7418        Benin 2000             89.3            57.2      5.98    6949366\n7422     Botswana 2000             52.4            47.6      3.41    1736579\n7426 Burkina Faso 2000             96.2            52.6      6.59   11607944\n7427      Burundi 2000             93.4            46.7      7.06    6767073\n             gdp continent          region\n7402 54790058957    Africa Northern Africa\n7403  9129180361    Africa   Middle Africa\n7418  2254838685    Africa  Western Africa\n7422  5632391130    Africa Southern Africa\n7426  2610945549    Africa  Western Africa\n7427   835334807    Africa  Eastern Africa\n\n\nSince they are, I want to first look at how fertility may affect population."
  },
  {
    "objectID": "coding_exercise.html#fertility-vs.-population",
    "href": "coding_exercise.html#fertility-vs.-population",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "Fertility vs. Population",
    "text": "Fertility vs. Population\n\nggplot()+\n  geom_smooth(aes(y=log(population), x=fertility), data=africadata_2000, alpha = 0.1)+\n  geom_point(aes(y=log(population), x=fertility), data=africadata_2000)+\n  theme_bw()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nThere doesn’t seem to be much of a correlation for fertility versus population, at least using logs. I’ll double-check this quantitatively as well.\n\nRegression Fertility vs Population\n\nfit3 = lm(population~fertility, data=africadata_2000)\nsummary(fit3)\n\n\nCall:\nlm(formula = population ~ fertility, data = africadata_2000)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-15760443 -12563579  -7667052   1295355 106245914 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept) 10355760   11577157   0.894    0.375\nfertility    1028697    2162449   0.476    0.636\n\nResidual standard error: 22260000 on 49 degrees of freedom\nMultiple R-squared:  0.004597,  Adjusted R-squared:  -0.01572 \nF-statistic: 0.2263 on 1 and 49 DF,  p-value: 0.6364\n\n\nBased on this regression model, as supported by the plot above, we don’t have evidence to support the associated between fertility alone and population. This is a bit surprising to me, because I would think that as the number of children per woman increased, so would the population.\nNow I want to look at infant mortality as a determinant of population."
  },
  {
    "objectID": "coding_exercise.html#infant-mortality-vs-population.",
    "href": "coding_exercise.html#infant-mortality-vs-population.",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "Infant Mortality vs Population.",
    "text": "Infant Mortality vs Population.\n\nggplot()+\n  geom_smooth(aes(y=log(population), x=infant_mortality), data=africadata_2000, alpha = 0.1)+\n  geom_point(aes(y=log(population), x=infant_mortality), data=africadata_2000)+\n  theme_bw()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nThere also doesn’t seem to be much of a correlation for infant mortality versus population.\n\nRegression Infant Mortality vs Population\n\nfit4 = lm(population~infant_mortality, data=africadata_2000)\nsummary(fit4)\n\n\nCall:\nlm(formula = population ~ infant_mortality, data = africadata_2000)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-16307667 -12769228  -7828854    733380 105710100 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)\n(Intercept)      12063474    8682734   1.389    0.171\ninfant_mortality    45564     102671   0.444    0.659\n\nResidual standard error: 22260000 on 49 degrees of freedom\nMultiple R-squared:  0.004003,  Adjusted R-squared:  -0.01632 \nF-statistic: 0.1969 on 1 and 49 DF,  p-value: 0.6592\n\n\nAnd this is supported with the regression model as well. This is also surprising as I would guess that a country with higher rates of infant mortality would have a more stagnant population, while countries with lower rates would have a growing population."
  },
  {
    "objectID": "coding_exercise.html#combined-variable-interactions",
    "href": "coding_exercise.html#combined-variable-interactions",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "Combined Variable Interactions",
    "text": "Combined Variable Interactions\nHowever, I want to see if infant mortality and fertility have an interaction, which together may impact the population.\n\nInfant Mortality vs Fertility\n\nggplot()+\n  geom_smooth(aes(x=infant_mortality, y=fertility), data=africadata_2000, alpha = 0.1)+\n  geom_point(aes(x=infant_mortality, y=fertility), data=africadata_2000)+\n  theme_bw()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nIt seems like there is a relationship here where they have a positive correlation, rather than the negative one which I had previously assumed. As the Gapminder documentation describes, this may be an indication of “many children and short lives.”\n\nfit5<-lm(fertility~infant_mortality, data=africadata_2000)\nsummary(fit5)\n\n\nCall:\nlm(formula = fertility ~ infant_mortality, data = africadata_2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.76037 -0.64424  0.04014  0.48908  1.70450 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       2.06086    0.32306   6.379 6.08e-08 ***\ninfant_mortality  0.03921    0.00382  10.265 8.38e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8284 on 49 degrees of freedom\nMultiple R-squared:  0.6826,    Adjusted R-squared:  0.6761 \nF-statistic: 105.4 on 1 and 49 DF,  p-value: 8.379e-14\n\n\n\n\nCombined Effect on Population\n\nfit6<-lm(population~infant_mortality*fertility, data=africadata_2000)\nsummary(fit6)\n\n\nCall:\nlm(formula = population ~ infant_mortality * fertility, data = africadata_2000)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-16611567 -11852919  -8981133   1442415 105324669 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)\n(Intercept)                21941250   24539351   0.894    0.376\ninfant_mortality            -194248     437131  -0.444    0.659\nfertility                  -1845199    6236486  -0.296    0.769\ninfant_mortality:fertility    41894      78706   0.532    0.597\n\nResidual standard error: 22660000 on 47 degrees of freedom\nMultiple R-squared:  0.01073,   Adjusted R-squared:  -0.05242 \nF-statistic: 0.1699 on 3 and 47 DF,  p-value: 0.9162\n\n\nThe combined effect still does not have an association with population, nor is the interaction between the two variables significant. Since they are correlated, this may be a case of multicolinearity, which I will double check just to be sure:\n\nlibrary(car)\n\nLoading required package: carData\n\n\n\nAttaching package: 'car'\n\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\n\nThe following object is masked from 'package:purrr':\n\n    some\n\nvif(fit6)\n\nthere are higher-order terms (interactions) in this model\nconsider setting type = 'predictor'; see ?vif\n\n\n          infant_mortality                  fertility \n                 17.505466                   8.027358 \ninfant_mortality:fertility \n                 34.057197 \n\n\nThe standard cutoff for VIF use is 10, so since the interaction between infant mortality and fertility is a whopping 34, we can assume this is a redundant term and should not be used in a model.\n\n\nRemove the Interaction\n\nfit62<-lm(population~infant_mortality+fertility, data=africadata_2000)\nsummary(fit62)\n\n\nCall:\nlm(formula = population ~ infant_mortality + fertility, data = africadata_2000)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-16010329 -12607659  -7840265    950724 105972070 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)\n(Intercept)      10533816   11864479   0.888    0.379\ninfant_mortality    16457     184056   0.089    0.929\nfertility          742243    3877752   0.191    0.849\n\nResidual standard error: 22490000 on 48 degrees of freedom\nMultiple R-squared:  0.004763,  Adjusted R-squared:  -0.03671 \nF-statistic: 0.1149 on 2 and 48 DF,  p-value: 0.8917\n\nvif(fit62)\n\ninfant_mortality        fertility \n        3.150547         3.150547 \n\n\nNow that we’ve removed the interaction, while the model still does not show any significant associations between population, infant mortality, and fertility, we can be confident in our answers and the validity of the model."
  },
  {
    "objectID": "coding_exercise.html#conclusions-1",
    "href": "coding_exercise.html#conclusions-1",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "Conclusions",
    "text": "Conclusions\nBased on this analysis, we can conclude that neither infant mortality or the number of children per woman influence a country’s population. However, countries with higher rates of infant mortality also have more children per woman. Based on this data, for every child dead per 1000 live births, the average woman is likely to have 0.04 more children. This is not a very interpretable number. When translated, this can also mean that when the infant mortality rate reaches 1 in 40 live births (0.025%), the average woman will have 1 child. While this may seem insanely high, based on the data, 16 countries have infant mortality rates over 100, or 1 death per in 10 births, and in these countries the average number of children per woman is over 6, and we see this average drop to around 4 in the countries with lower infant mortality rates. This is an indication of lack of access to resources like reproductive healthcare, education, and necessities like food and water."
  },
  {
    "objectID": "coding_exercise.html#thanks",
    "href": "coding_exercise.html#thanks",
    "title": "R Coding Exercise - Kelly Hatfield",
    "section": "Thanks",
    "text": "Thanks\nThanks to Abbie Klinker for her awesome additional analyses!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Well, Hello.",
    "section": "",
    "text": "I’m happy you stopped by.\nWelcome to Kelly Hatfield’s modern applied data analysis website and portfolio. Please visit my About Me to learn more about… me!!"
  },
  {
    "objectID": "dataanalysis_exercise.html",
    "href": "dataanalysis_exercise.html",
    "title": "R Data Wrangling Exercise - Kelly Hatfield",
    "section": "",
    "text": "We accessed this data from CDC HAIC Data Viz\n\n\nThe healthcare-associated infection component of CDC’s Emerging Infections Program engages a network of state health departments and their academic medical center partners to help answer critical questions about emerging threats, advanced infection tracking methods, and antibiotic resistance in the United States. Information gathered through this activity will play a key role in shaping future policies and recommendations targeting HAI prevention.\n Selected gram-negative bacteria are under surveillance, as they are becoming resistant to all or nearly all antibiotics, meaning that patients with infections from these bacteria might have few or no treatment options. Infections due to highly resistant bacteria, such as carbapenem-resistant Enterobacterales (CRE), carbapenem-resistant Acinetobacter baumannii (CRAB)are mainly associated with healthcare settings and have high death rates.\nWe will explore longitudinal data from these pathogens on CDC’s website.\n\n\n\n\n#Load Tidyverse\nlibrary(tidyverse) \n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.3.0      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(ggplot2)\n\nmugsi <- read_csv(\"Data_Exercise/Data/MUGSI.csv\")\n\nRows: 328 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): Organism, Topic, Viewby, Series\ndbl (2): YearName, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#view some data\nprint(mugsi)\n\n# A tibble: 328 × 6\n   YearName Organism Topic      Viewby Series      Value\n      <dbl> <chr>    <chr>      <chr>  <chr>       <dbl>\n 1     2012 CRAB     Case Rates Age    19-49 years  1.06\n 2     2013 CRAB     Case Rates Age    19-49 years  0.89\n 3     2014 CRAB     Case Rates Age    19-49 years  0.53\n 4     2015 CRAB     Case Rates Age    19-49 years  0.9 \n 5     2016 CRAB     Case Rates Age    19-49 years  0.59\n 6     2017 CRAB     Case Rates Age    19-49 years  0.38\n 7     2018 CRAB     Case Rates Age    19-49 years  0.28\n 8     2012 CRAB     Case Rates Age    50-64 years  1.87\n 9     2013 CRAB     Case Rates Age    50-64 years  2.42\n10     2014 CRAB     Case Rates Age    50-64 years  2.13\n# … with 318 more rows\n\n#get an overview of data structure\nstr(mugsi)\n\nspc_tbl_ [328 × 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ YearName: num [1:328] 2012 2013 2014 2015 2016 ...\n $ Organism: chr [1:328] \"CRAB\" \"CRAB\" \"CRAB\" \"CRAB\" ...\n $ Topic   : chr [1:328] \"Case Rates\" \"Case Rates\" \"Case Rates\" \"Case Rates\" ...\n $ Viewby  : chr [1:328] \"Age\" \"Age\" \"Age\" \"Age\" ...\n $ Series  : chr [1:328] \"19-49 years\" \"19-49 years\" \"19-49 years\" \"19-49 years\" ...\n $ Value   : num [1:328] 1.06 0.89 0.53 0.9 0.59 0.38 0.28 1.87 2.42 2.13 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   YearName = col_double(),\n  ..   Organism = col_character(),\n  ..   Topic = col_character(),\n  ..   Viewby = col_character(),\n  ..   Series = col_character(),\n  ..   Value = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n#get a summary of data\nsummary(mugsi)\n\n    YearName      Organism            Topic              Viewby         \n Min.   :2012   Length:328         Length:328         Length:328        \n 1st Qu.:2013   Class :character   Class :character   Class :character  \n Median :2015   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2015                                                           \n 3rd Qu.:2017                                                           \n Max.   :2018                                                           \n    Series              Value        \n Length:328         Min.   : 0.0000  \n Class :character   1st Qu.: 0.3675  \n Mode  :character   Median : 1.0950  \n                    Mean   : 2.9935  \n                    3rd Qu.: 2.9600  \n                    Max.   :65.2200  \n\n#look at values for organism, topic, viewby, and series and \ntable(mugsi$Organism)\n\n\nCRAB  CRE \n 133  195 \n\ntable(mugsi$Topic)\n\n\n Case Rates Death Rates \n        314          14 \n\n\n\n\n\nThe objective of this analysis will be to view the number of CRE cases by year and patient location. We will first subset the data to only include that information.\nHowever, the data are laid out in a funny shape for analysis. For this project we will subset the data to be laid out in a more Tidy manner.\nWe will make columns year, organism, case rates, and death rates. There will be a row for each year, organism, and location combination.\n\nmugsi_analysis0 = mugsi%>% filter(Topic==\"Case Rates\") %>% filter(Viewby==\"Patient location\") %>%rename(patient_location = Series) %>%  rename(case_rates = Value)\n\nmugsi_analysis0a <- mugsi_analysis0[,!names(mugsi_analysis0) %in% c(\"Topic\", \"Viewby\")]\n\nmugsi_analysis1 = mugsi%>% filter(Topic==\"Death Rates\") %>%rename(patient_location = Series) %>%  rename(death_rates = Value)\n\nmugsi_analysis1a <- mugsi_analysis1[,!names(mugsi_analysis1) %in% c(\"Topic\", \"Viewby\")]\n  \nmugsi_tidy <- left_join(mugsi_analysis0a, mugsi_analysis1a, by=c(\"YearName\", \"Organism\", \"patient_location\"))\n\nprint(mugsi_tidy)\n\n# A tibble: 63 × 5\n   YearName Organism patient_location case_rates death_rates\n      <dbl> <chr>    <chr>                 <dbl>       <dbl>\n 1     2012 CRAB     All cases              1.58        0.32\n 2     2013 CRAB     All cases              1.39        0.22\n 3     2014 CRAB     All cases              1.04        0.2 \n 4     2015 CRAB     All cases              1.1         0.16\n 5     2016 CRAB     All cases              0.76        0.07\n 6     2017 CRAB     All cases              0.8         0.18\n 7     2018 CRAB     All cases              0.53        0.08\n 8     2012 CRAB     Community              0.32       NA   \n 9     2013 CRAB     Community              0.32       NA   \n10     2014 CRAB     Community              0.27       NA   \n# … with 53 more rows\n\nview(mugsi_tidy)\n\n\n\n\nIn order to plot the number of CRE cases by patient location over time you will need the following variables:\nYearName : Numeric variable for year Organism: Indicates if CRE or CRAB data case_rates: Numeric variable describing organism rates per 100,000 population patient_location: categorical variable describing patient location (LTAC= long term acute care hospital, and LTCF= long term care facility, All Cases = Sum of all locations\n\n\nYou should look at either “All cases” or the four location groupings (hospital inpatient, community, LTCF, and LTAC). “All cases” represents the sum of the four subset locations.\nDeath rates are only available for “All cases” (not stratified by patient location).\n\n\n\nI am going to graph CRE rates over time by location.\n\nmugsi_plot1 <- subset(mugsi_tidy, Organism==\"CRE\")\n\nggplot(mugsi_plot1, aes(x=YearName, y=case_rates, color=patient_location, group=patient_location)) + geom_point() + geom_line() +labs(y=\"Case Rates per 100,000 population\", x=\"Year\", title = \"Annual CRE Rates by Patient Location\")\n\n\n\n\nNow I will save this into a R dataset for you to analyze!\n\n#Export\n\nsave(mugsi_tidy, file = \"Data_Exercise/Data/MUGSI_tidy.RData\") #raw and clean data if needed\n\n\n\n\nSome potential analytic ideas:\nLook at trends in case rates and death rates for each year for each pathogen group.\nLook to see if CRAB trends are similar to CRE trends in specific settings.\n\n\n\n\n\n\n\n#Path to data. Note the use of the here() package and not absolute paths\nload(here::here(\"Data_Exercise\",\"Data\",\"MUGSI_tidy.RData\"))\n\n\n\n\n\nls()\n\n[1] \"mugsi\"            \"mugsi_analysis0\"  \"mugsi_analysis0a\" \"mugsi_analysis1\" \n[5] \"mugsi_analysis1a\" \"mugsi_plot1\"      \"mugsi_tidy\"      \n\n\n\n# Get a glimpse of data\nglimpse(mugsi_tidy)\n\nRows: 63\nColumns: 5\n$ YearName         <dbl> 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2012, 2013,…\n$ Organism         <chr> \"CRAB\", \"CRAB\", \"CRAB\", \"CRAB\", \"CRAB\", \"CRAB\", \"CRAB…\n$ patient_location <chr> \"All cases\", \"All cases\", \"All cases\", \"All cases\", \"…\n$ case_rates       <dbl> 1.58, 1.39, 1.04, 1.10, 0.76, 0.80, 0.53, 0.32, 0.32,…\n$ death_rates      <dbl> 0.32, 0.22, 0.20, 0.16, 0.07, 0.18, 0.08, NA, NA, NA,…\n\n\n\n\n\n\nmugsi_crab <- subset(mugsi_tidy, Organism==\"CRAB\")\n\nggplot(mugsi_crab, aes(x=YearName, y=case_rates, color=patient_location, group=patient_location)) + geom_point() + geom_line() +labs(y=\"Case Rates per 100,000 population\", x=\"Year\", title = \"Annual CRAB Rates by Patient Location\")\n\n\n\n\n\n\n\n\n# Creating a subset of the data indicating patient location is all cases.\nmugsi_location <- subset(mugsi_tidy, patient_location == \"All cases\")\n\nggplot(mugsi_location, aes(x=YearName, y=case_rates, color=Organism, group=Organism)) + geom_point() + geom_line() +labs(y=\"Case Rates per 100,000 population\", x=\"Year\", title = \"Annual CRAB Rates by Patient Location\")"
  },
  {
    "objectID": "fluanalysis/Code/explorations.html",
    "href": "fluanalysis/Code/explorations.html",
    "title": "exploration",
    "section": "",
    "text": "library(here)\n\nhere() starts at /Users/kellymccormickhatfield/Documents/MADA 2023/kellyhatfield-MADA-portfolio\n\nlibrary(tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.2     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n\nCleanSymp <- readRDS(\"~/Documents/MADA 2023/kellyhatfield-MADA-portfolio/fluanalysis/Data/CleanSymp.Rds\")\nls(CleanSymp)\n\n [1] \"AbPain\"            \"BodyTemp\"          \"Breathless\"       \n [4] \"ChestCongestion\"   \"ChestPain\"         \"ChillsSweats\"     \n [7] \"CoughIntensity\"    \"CoughYN\"           \"CoughYN2\"         \n[10] \"Diarrhea\"          \"EarPn\"             \"EyePn\"            \n[13] \"Fatigue\"           \"Headache\"          \"Hearing\"          \n[16] \"Insomnia\"          \"ItchyEye\"          \"Myalgia\"          \n[19] \"MyalgiaYN\"         \"NasalCongestion\"   \"Nausea\"           \n[22] \"Pharyngitis\"       \"RunnyNose\"         \"Sneeze\"           \n[25] \"SubjectiveFever\"   \"SwollenLymphNodes\" \"ToothPn\"          \n[28] \"Vision\"            \"Vomit\"             \"Weakness\"         \n[31] \"WeaknessYN\"        \"Wheeze\"           \n\nsummary(CleanSymp)\n\n SwollenLymphNodes ChestCongestion ChillsSweats NasalCongestion CoughYN  \n No :418           No :323         No :130      No :167         No : 75  \n Yes:312           Yes:407         Yes:600      Yes:563         Yes:655  \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n Sneeze    Fatigue   SubjectiveFever Headache      Weakness   WeaknessYN\n No :339   No : 64   No :230         No :115   None    : 49   No : 49   \n Yes:391   Yes:666   Yes:500         Yes:615   Mild    :223   Yes:681   \n                                               Moderate:338             \n                                               Severe  :120             \n                                                                        \n                                                                        \n  CoughIntensity CoughYN2      Myalgia    MyalgiaYN RunnyNose AbPain   \n None    : 47    No : 47   None    : 79   No : 79   No :211   No :639  \n Mild    :154    Yes:683   Mild    :213   Yes:651   Yes:519   Yes: 91  \n Moderate:357              Moderate:325                                \n Severe  :172              Severe  :113                                \n                                                                       \n                                                                       \n ChestPain Diarrhea  EyePn     Insomnia  ItchyEye  Nausea    EarPn    \n No :497   No :631   No :617   No :315   No :551   No :475   No :568  \n Yes:233   Yes: 99   Yes:113   Yes:415   Yes:179   Yes:255   Yes:162  \n                                                                      \n                                                                      \n                                                                      \n                                                                      \n Hearing   Pharyngitis Breathless ToothPn   Vision    Vomit     Wheeze   \n No :700   No :119     No :436    No :565   No :711   No :652   No :510  \n Yes: 30   Yes:611     Yes:294    Yes:165   Yes: 19   Yes: 78   Yes:220  \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n    BodyTemp     \n Min.   : 97.20  \n 1st Qu.: 98.20  \n Median : 98.50  \n Mean   : 98.94  \n 3rd Qu.: 99.30  \n Max.   :103.10  \n\n\nThings to note:\n\nMost variables are categorical Yes/No.\nTemperature is continuous from 97.2 to 103.1\nWeakness, CoughIntensity, and Myalgia are scored None, Mild, Moderate, Severe\nMyalgiaYN, CoughYN2, and WeaknessYN are all Yes/No versions of their corresponding intensity variable (None, Mild, Moderate, Severe)"
  },
  {
    "objectID": "fluanalysis/Code/explorations.html#data-explorations-body-temperature",
    "href": "fluanalysis/Code/explorations.html#data-explorations-body-temperature",
    "title": "exploration",
    "section": "Data Explorations: Body Temperature",
    "text": "Data Explorations: Body Temperature\nFirst, we want to look at temperature with a few key variables. We have selected cough, chest pain and wheeze.\n\nCleanSymp %>% summarize(min=min(BodyTemp),mean=mean(BodyTemp), q1 = quantile(BodyTemp, 0.25), median = mean(BodyTemp),  q3 = quantile(BodyTemp, 0.75), max=max(BodyTemp))\n\n   min     mean   q1   median   q3   max\n1 97.2 98.93507 98.2 98.93507 99.3 103.1\n\nCleanSymp %>% group_by(CoughYN2) %>% summarize(mean=mean(BodyTemp), q1 = quantile(BodyTemp, 0.25), median = mean(BodyTemp),  q3 = quantile(BodyTemp, 0.75))\n\n# A tibble: 2 × 5\n  CoughYN2  mean    q1 median    q3\n  <fct>    <dbl> <dbl>  <dbl> <dbl>\n1 No        98.7  98     98.7  99.0\n2 Yes       99.0  98.2   99.0  99.3\n\nggplot(CleanSymp, aes(x = CoughYN2, y = BodyTemp)) + geom_boxplot(fill = \"grey92\") + geom_point(size = 2, alpha = .15,position = position_jitter(seed = 1, width = .2)) \n\n\n\nCleanSymp %>% group_by(ChestPain) %>% summarize(mean=mean(BodyTemp),  q1 = quantile(BodyTemp, 0.25), median = median(BodyTemp),  q3 = quantile(BodyTemp, 0.75))\n\n# A tibble: 2 × 5\n  ChestPain  mean    q1 median    q3\n  <fct>     <dbl> <dbl>  <dbl> <dbl>\n1 No         98.9  98.2   98.5  99.2\n2 Yes        99.0  98.2   98.6  99.5\n\nggplot(CleanSymp, aes(x = ChestPain, y = BodyTemp)) + geom_boxplot(fill = \"grey92\") + geom_point(size = 2, alpha = .15,position = position_jitter(seed = 1, width = .2)) \n\n\n\nCleanSymp %>% group_by(Wheeze) %>% summarize(mean=mean(BodyTemp),  q1 = quantile(BodyTemp, 0.25), median = median(BodyTemp),  q3 = quantile(BodyTemp, 0.75))\n\n# A tibble: 2 × 5\n  Wheeze  mean    q1 median    q3\n  <fct>  <dbl> <dbl>  <dbl> <dbl>\n1 No      98.9  98.2   98.5  99.2\n2 Yes     99.0  98.2   98.6  99.3\n\nggplot(CleanSymp, aes(x = Wheeze, y = BodyTemp)) + geom_boxplot(fill = \"grey92\") + geom_point(size = 2, alpha = .15,position = position_jitter(seed = 1, width = .2)) \n\n\n\n\nSince median teperature seems to be slightly elevated for the cough variable, we will look at it further for those varying rankings of the intensity of the cough.\n\nCleanSymp %>% group_by(CoughIntensity) %>% summarize(mean=mean(BodyTemp),  q1 = quantile(BodyTemp, 0.25), median = median(BodyTemp),  q3 = quantile(BodyTemp, 0.75))\n\n# A tibble: 4 × 5\n  CoughIntensity  mean    q1 median    q3\n  <fct>          <dbl> <dbl>  <dbl> <dbl>\n1 None            98.7  98     98.3  99.0\n2 Mild            99    98.1   98.5  99.2\n3 Moderate        98.9  98.2   98.5  99.3\n4 Severe          99.0  98.2   98.6  99.5\n\nggplot(CleanSymp, aes(x = CoughIntensity, y = BodyTemp)) + geom_boxplot(fill = \"grey92\") + geom_point(size = 2, alpha = .15,position = position_jitter(seed = 1, width = .2)) \n\n\n\n\nThe mean body temperature doesn’t seem to vary too much by increasing cough intensity group. However, perhaps some increase in median or q3 values."
  },
  {
    "objectID": "fluanalysis/Code/explorations.html#data-explorations-nausea",
    "href": "fluanalysis/Code/explorations.html#data-explorations-nausea",
    "title": "exploration",
    "section": "Data Explorations: Nausea",
    "text": "Data Explorations: Nausea\nFor nausea we have decided to assess the relationship of nausea with subjective fever, myalgia, and abdominal pain.\n\n# Variables of interest with Nausea \ntable1 <- table(CleanSymp$Nausea,CleanSymp$SubjectiveFever)\ntable1\n\n     \n       No Yes\n  No  166 309\n  Yes  64 191\n\nprop.table(table1) %>% {.*100} %>% round(2)\n\n     \n         No   Yes\n  No  22.74 42.33\n  Yes  8.77 26.16\n\ntable2 <- table(CleanSymp$Nausea,CleanSymp$MyalgiaYN)\ntable2\n\n     \n       No Yes\n  No   63 412\n  Yes  16 239\n\nprop.table(table2) %>% {.*100} %>% round(2)\n\n     \n         No   Yes\n  No   8.63 56.44\n  Yes  2.19 32.74\n\ntable3 <- table(CleanSymp$Nausea,CleanSymp$AbPain)\ntable3\n\n     \n       No Yes\n  No  444  31\n  Yes 195  60\n\nprop.table(table3) %>% {.*100} %>% round(2)\n\n     \n         No   Yes\n  No  60.82  4.25\n  Yes 26.71  8.22"
  },
  {
    "objectID": "fluanalysis/Code/explorations.html#data-explorations-nausea-and-body-temp",
    "href": "fluanalysis/Code/explorations.html#data-explorations-nausea-and-body-temp",
    "title": "exploration",
    "section": "Data Explorations: Nausea and Body Temp",
    "text": "Data Explorations: Nausea and Body Temp\nFFinally lets look at the relationships between our two primary variables.\n\nCleanSymp %>% group_by(Nausea) %>% summarize(mean=mean(BodyTemp),  q1 = quantile(BodyTemp, 0.25), median = median(BodyTemp),  q3 = quantile(BodyTemp, 0.75))\n\n# A tibble: 2 × 5\n  Nausea  mean    q1 median    q3\n  <fct>  <dbl> <dbl>  <dbl> <dbl>\n1 No      98.9  98.2   98.5  99.3\n2 Yes     99.0  98.2   98.6  99.3\n\nggplot(CleanSymp, aes(x = Nausea, y = BodyTemp)) + geom_boxplot(fill = \"grey92\") + geom_point(size = 2, alpha = .15,position = position_jitter(seed = 1, width = .2))"
  },
  {
    "objectID": "fluanalysis/Code/wrangling.html",
    "href": "fluanalysis/Code/wrangling.html",
    "title": "wrangling",
    "section": "",
    "text": "Working to find the data\n\nlibrary(here)\n\nhere() starts at /Users/kellymccormickhatfield/Documents/MADA 2023/kellyhatfield-MADA-portfolio\n\nlibrary (tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.3.0      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nraw_data <- readRDS(file = \"/Users/kellymccormickhatfield/Documents/MADA 2023/kellyhatfield-MADA-portfolio/fluanalysis/Data/SympAct_Any_Pos.Rda\")"
  },
  {
    "objectID": "fluanalysis/Code/wrangling.html#step-2-wrangling-data",
    "href": "fluanalysis/Code/wrangling.html#step-2-wrangling-data",
    "title": "wrangling",
    "section": "Step 2: Wrangling Data",
    "text": "Step 2: Wrangling Data\nPart 1: Subsetting Data\n\nRemove all variables that have Score or Total or FluA or FluB or Dxname or Activity in their name. \nAlso remove the variable Unique.Visit. You should be left with 32 variables coding for presence or absence of some symptom. Only one, temperature, is continuous. A few have multiple categories.\nRemove any NA observations, there aren’t many.\n\n\n#List variable names\n\nls(raw_data)\n\n [1] \"AbPain\"            \"ActivityLevel\"     \"ActivityLevelF\"   \n [4] \"BodyTemp\"          \"Breathless\"        \"ChestCongestion\"  \n [7] \"ChestPain\"         \"ChillsSweats\"      \"CoughIntensity\"   \n[10] \"CoughYN\"           \"CoughYN2\"          \"Diarrhea\"         \n[13] \"DxName1\"           \"DxName2\"           \"DxName3\"          \n[16] \"DxName4\"           \"DxName5\"           \"EarPn\"            \n[19] \"EyePn\"             \"Fatigue\"           \"Headache\"         \n[22] \"Hearing\"           \"ImpactScore\"       \"ImpactScore2\"     \n[25] \"ImpactScore2F\"     \"ImpactScore3\"      \"ImpactScore3F\"    \n[28] \"ImpactScoreF\"      \"ImpactScoreFD\"     \"Insomnia\"         \n[31] \"ItchyEye\"          \"Myalgia\"           \"MyalgiaYN\"        \n[34] \"NasalCongestion\"   \"Nausea\"            \"PCRFluA\"          \n[37] \"PCRFluB\"           \"Pharyngitis\"       \"RapidFluA\"        \n[40] \"RapidFluB\"         \"RunnyNose\"         \"Sneeze\"           \n[43] \"SubjectiveFever\"   \"SwollenLymphNodes\" \"ToothPn\"          \n[46] \"TotalSymp1\"        \"TotalSymp1F\"       \"TotalSymp2\"       \n[49] \"TotalSymp3\"        \"TransScore1\"       \"TransScore1F\"     \n[52] \"TransScore2\"       \"TransScore2F\"      \"TransScore3\"      \n[55] \"TransScore3F\"      \"TransScore4\"       \"TransScore4F\"     \n[58] \"Unique.Visit\"      \"Vision\"            \"Vomit\"            \n[61] \"Weakness\"          \"WeaknessYN\"        \"Wheeze\"           \n\nraw_data2 <- raw_data %>% select(-contains(c(\"Score\",\"Total\",\"FluA\",\"FluB\",\"Dxname\", \"Activity\"))) %>% select(-contains(c(\"Unique.Visit\")))\n\n#Contains 32 variables. Yay!\n\n#Remove missing observations\nraw_data3 <- na.omit(raw_data2)\n#Only dropped 5 observations. \n\nsummary(raw_data3)\n\n SwollenLymphNodes ChestCongestion ChillsSweats NasalCongestion CoughYN  \n No :418           No :323         No :130      No :167         No : 75  \n Yes:312           Yes:407         Yes:600      Yes:563         Yes:655  \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n Sneeze    Fatigue   SubjectiveFever Headache      Weakness   WeaknessYN\n No :339   No : 64   No :230         No :115   None    : 49   No : 49   \n Yes:391   Yes:666   Yes:500         Yes:615   Mild    :223   Yes:681   \n                                               Moderate:338             \n                                               Severe  :120             \n                                                                        \n                                                                        \n  CoughIntensity CoughYN2      Myalgia    MyalgiaYN RunnyNose AbPain   \n None    : 47    No : 47   None    : 79   No : 79   No :211   No :639  \n Mild    :154    Yes:683   Mild    :213   Yes:651   Yes:519   Yes: 91  \n Moderate:357              Moderate:325                                \n Severe  :172              Severe  :113                                \n                                                                       \n                                                                       \n ChestPain Diarrhea  EyePn     Insomnia  ItchyEye  Nausea    EarPn    \n No :497   No :631   No :617   No :315   No :551   No :475   No :568  \n Yes:233   Yes: 99   Yes:113   Yes:415   Yes:179   Yes:255   Yes:162  \n                                                                      \n                                                                      \n                                                                      \n                                                                      \n Hearing   Pharyngitis Breathless ToothPn   Vision    Vomit     Wheeze   \n No :700   No :119     No :436    No :565   No :711   No :652   No :510  \n Yes: 30   Yes:611     Yes:294    Yes:165   Yes: 19   Yes: 78   Yes:220  \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n    BodyTemp     \n Min.   : 97.20  \n 1st Qu.: 98.20  \n Median : 98.50  \n Mean   : 98.94  \n 3rd Qu.: 99.30  \n Max.   :103.10"
  },
  {
    "objectID": "fluanalysis/Code/wrangling.html#step-3-save-wrangled-data-as-a-rds",
    "href": "fluanalysis/Code/wrangling.html#step-3-save-wrangled-data-as-a-rds",
    "title": "wrangling",
    "section": "Step 3: Save Wrangled Data as a RDS",
    "text": "Step 3: Save Wrangled Data as a RDS\n\nhere()\n\n[1] \"/Users/kellymccormickhatfield/Documents/MADA 2023/kellyhatfield-MADA-portfolio\"\n\n#Need to add some files to here\n\n\npath <- here(\"fluanalysis\",\"Data\",\"CleanSymp.Rds\")\nsaveRDS(raw_data3, file = path)\n\npath <- here(\"fluanalysis\", \"Data\", \"FinalDataML.Rds\")\nsaveRDS(Fludata2, file = path)"
  },
  {
    "objectID": "fluanalysis/Code/fitting.html",
    "href": "fluanalysis/Code/fitting.html",
    "title": "fitting",
    "section": "",
    "text": "library(here)\n\nhere() starts at /Users/kellymccormickhatfield/Documents/MADA 2023/kellyhatfield-MADA-portfolio\n\nlibrary(tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.2     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\nlibrary(performance)\n\n\nAttaching package: 'performance'\n\nThe following objects are masked from 'package:yardstick':\n\n    mae, rmse\n\nCleanSymp <- readRDS(\"~/Documents/MADA 2023/kellyhatfield-MADA-portfolio/fluanalysis/Data/CleanSymp.Rds\")\nls(CleanSymp)\n\n [1] \"AbPain\"            \"BodyTemp\"          \"Breathless\"       \n [4] \"ChestCongestion\"   \"ChestPain\"         \"ChillsSweats\"     \n [7] \"CoughIntensity\"    \"CoughYN\"           \"CoughYN2\"         \n[10] \"Diarrhea\"          \"EarPn\"             \"EyePn\"            \n[13] \"Fatigue\"           \"Headache\"          \"Hearing\"          \n[16] \"Insomnia\"          \"ItchyEye\"          \"Myalgia\"          \n[19] \"MyalgiaYN\"         \"NasalCongestion\"   \"Nausea\"           \n[22] \"Pharyngitis\"       \"RunnyNose\"         \"Sneeze\"           \n[25] \"SubjectiveFever\"   \"SwollenLymphNodes\" \"ToothPn\"          \n[28] \"Vision\"            \"Vomit\"             \"Weakness\"         \n[31] \"WeaknessYN\"        \"Wheeze\"           \n\nsummary(CleanSymp)\n\n SwollenLymphNodes ChestCongestion ChillsSweats NasalCongestion CoughYN  \n No :418           No :323         No :130      No :167         No : 75  \n Yes:312           Yes:407         Yes:600      Yes:563         Yes:655  \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n Sneeze    Fatigue   SubjectiveFever Headache      Weakness   WeaknessYN\n No :339   No : 64   No :230         No :115   None    : 49   No : 49   \n Yes:391   Yes:666   Yes:500         Yes:615   Mild    :223   Yes:681   \n                                               Moderate:338             \n                                               Severe  :120             \n                                                                        \n                                                                        \n  CoughIntensity CoughYN2      Myalgia    MyalgiaYN RunnyNose AbPain   \n None    : 47    No : 47   None    : 79   No : 79   No :211   No :639  \n Mild    :154    Yes:683   Mild    :213   Yes:651   Yes:519   Yes: 91  \n Moderate:357              Moderate:325                                \n Severe  :172              Severe  :113                                \n                                                                       \n                                                                       \n ChestPain Diarrhea  EyePn     Insomnia  ItchyEye  Nausea    EarPn    \n No :497   No :631   No :617   No :315   No :551   No :475   No :568  \n Yes:233   Yes: 99   Yes:113   Yes:415   Yes:179   Yes:255   Yes:162  \n                                                                      \n                                                                      \n                                                                      \n                                                                      \n Hearing   Pharyngitis Breathless ToothPn   Vision    Vomit     Wheeze   \n No :700   No :119     No :436    No :565   No :711   No :652   No :510  \n Yes: 30   Yes:611     Yes:294    Yes:165   Yes: 19   Yes: 78   Yes:220  \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n    BodyTemp     \n Min.   : 97.20  \n 1st Qu.: 98.20  \n Median : 98.50  \n Mean   : 98.94  \n 3rd Qu.: 99.30  \n Max.   :103.10"
  },
  {
    "objectID": "fluanalysis/Code/fitting.html#modeling-bodytemp-predicted-by-runnynose",
    "href": "fluanalysis/Code/fitting.html#modeling-bodytemp-predicted-by-runnynose",
    "title": "fitting",
    "section": "Modeling: BodyTemp predicted by RunnyNose",
    "text": "Modeling: BodyTemp predicted by RunnyNose\n\nCleanSymp %>% group_by(RunnyNose) %>% summarize(mean=mean(BodyTemp),  q1 = quantile(BodyTemp, 0.25), median = median(BodyTemp),  q3 = quantile(BodyTemp, 0.75))\n\n# A tibble: 2 × 5\n  RunnyNose  mean    q1 median    q3\n  <fct>     <dbl> <dbl>  <dbl> <dbl>\n1 No         99.1  98.2   98.8  99.6\n2 Yes        98.9  98.2   98.5  99.2\n\nggplot(CleanSymp, aes(x = RunnyNose, y = BodyTemp)) + geom_boxplot(fill = \"grey92\") + geom_point(size = 2, alpha = .15,position = position_jitter(seed = 1, width = .2)) \n\n\n\nlm_mod <- linear_reg()  %>% set_engine(\"lm\")\nfit_lm <- lm_mod%>% \n  fit(BodyTemp ~ RunnyNose, data = CleanSymp)\n\n\ntidy(fit_lm)\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic p.value\n  <chr>           <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)    99.1      0.0819   1210.   0      \n2 RunnyNoseYes   -0.293    0.0971     -3.01 0.00268\n\nglance(fit_lm)\n\n# A tibble: 1 × 12\n  r.squ…¹ adj.r…² sigma stati…³ p.value    df logLik   AIC   BIC devia…⁴ df.re…⁵\n    <dbl>   <dbl> <dbl>   <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl>   <dbl>   <int>\n1  0.0123  0.0110  1.19    9.08 0.00268     1 -1162. 2329. 2343.   1031.     728\n# … with 1 more variable: nobs <int>, and abbreviated variable names\n#   ¹​r.squared, ²​adj.r.squared, ³​statistic, ⁴​deviance, ⁵​df.residual"
  },
  {
    "objectID": "fluanalysis/Code/fitting.html#modeling-nausea-predicted-by-runnynose",
    "href": "fluanalysis/Code/fitting.html#modeling-nausea-predicted-by-runnynose",
    "title": "fitting",
    "section": "Modeling: Nausea predicted by RunnyNose",
    "text": "Modeling: Nausea predicted by RunnyNose\n\nlr_mod <- logistic_reg()\nfit_lr <- lr_mod  %>% \n  fit(Nausea ~ RunnyNose, data = CleanSymp)\n\ntidy(fit_lr)\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic    p.value\n  <chr>           <dbl>     <dbl>     <dbl>      <dbl>\n1 (Intercept)   -0.658      0.145    -4.53  0.00000589\n2 RunnyNoseYes   0.0502     0.172     0.292 0.770     \n\nglance(fit_lr)\n\n# A tibble: 1 × 8\n  null.deviance df.null logLik   AIC   BIC deviance df.residual  nobs\n          <dbl>   <int>  <dbl> <dbl> <dbl>    <dbl>       <int> <int>\n1          945.     729  -472.  949.  958.     945.         728   730"
  },
  {
    "objectID": "fluanalysis/Code/fitting.html#modeling-bodytemp-predicted-by-all-variables",
    "href": "fluanalysis/Code/fitting.html#modeling-bodytemp-predicted-by-all-variables",
    "title": "fitting",
    "section": "Modeling: BodyTemp predicted by all variables",
    "text": "Modeling: BodyTemp predicted by all variables\n\nlm_mod2 <- linear_reg()  %>% set_engine(\"lm\")\nfit_lm2 <- lm_mod2 %>% \n  fit(BodyTemp ~ ., data = CleanSymp)\n\n\ntidy(fit_lm2)\n\n# A tibble: 38 × 5\n   term                 estimate std.error statistic   p.value\n   <chr>                   <dbl>     <dbl>     <dbl>     <dbl>\n 1 (Intercept)           97.9       0.304   322.     0        \n 2 SwollenLymphNodesYes  -0.165     0.0920   -1.80   0.0727   \n 3 ChestCongestionYes     0.0873    0.0975    0.895  0.371    \n 4 ChillsSweatsYes        0.201     0.127     1.58   0.114    \n 5 NasalCongestionYes    -0.216     0.114    -1.90   0.0584   \n 6 CoughYNYes             0.314     0.241     1.30   0.193    \n 7 SneezeYes             -0.362     0.0983   -3.68   0.000249 \n 8 FatigueYes             0.265     0.161     1.65   0.0996   \n 9 SubjectiveFeverYes     0.437     0.103     4.22   0.0000271\n10 HeadacheYes            0.0115    0.125     0.0913 0.927    \n# … with 28 more rows\n\nglance(fit_lm2)\n\n# A tibble: 1 × 12\n  r.squ…¹ adj.r…² sigma stati…³ p.value    df logLik   AIC   BIC devia…⁴ df.re…⁵\n    <dbl>   <dbl> <dbl>   <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl>   <dbl>   <int>\n1   0.129  0.0860  1.14    3.02 4.20e-8    34 -1116. 2304. 2469.    909.     695\n# … with 1 more variable: nobs <int>, and abbreviated variable names\n#   ¹​r.squared, ²​adj.r.squared, ³​statistic, ⁴​deviance, ⁵​df.residual"
  },
  {
    "objectID": "fluanalysis/Code/fitting.html#modeling-nausea-predicted-by-all-variables",
    "href": "fluanalysis/Code/fitting.html#modeling-nausea-predicted-by-all-variables",
    "title": "fitting",
    "section": "Modeling: Nausea predicted by all variables",
    "text": "Modeling: Nausea predicted by all variables\n\nlr_mod2 <- logistic_reg()\nfit_lr2 <- lr_mod2  %>% \n  fit(Nausea ~ ., data = CleanSymp)\n\ntidy(fit_lr2)\n\n# A tibble: 38 × 5\n   term                 estimate std.error statistic p.value\n   <chr>                   <dbl>     <dbl>     <dbl>   <dbl>\n 1 (Intercept)             0.223     7.83     0.0285  0.977 \n 2 SwollenLymphNodesYes   -0.251     0.196   -1.28    0.200 \n 3 ChestCongestionYes      0.276     0.213    1.30    0.195 \n 4 ChillsSweatsYes         0.274     0.288    0.952   0.341 \n 5 NasalCongestionYes      0.426     0.255    1.67    0.0944\n 6 CoughYNYes             -0.140     0.519   -0.271   0.787 \n 7 SneezeYes               0.177     0.210    0.840   0.401 \n 8 FatigueYes              0.229     0.372    0.616   0.538 \n 9 SubjectiveFeverYes      0.278     0.225    1.23    0.218 \n10 HeadacheYes             0.331     0.285    1.16    0.245 \n# … with 28 more rows\n\nglance(fit_lr2)\n\n# A tibble: 1 × 8\n  null.deviance df.null logLik   AIC   BIC deviance df.residual  nobs\n          <dbl>   <int>  <dbl> <dbl> <dbl>    <dbl>       <int> <int>\n1          945.     729  -376.  821.  982.     751.         695   730"
  },
  {
    "objectID": "fluanalysis/Code/modeleval.html",
    "href": "fluanalysis/Code/modeleval.html",
    "title": "Evaluation",
    "section": "",
    "text": "library(here)\n\nhere() starts at /Users/kellymccormickhatfield/Documents/MADA 2023/kellyhatfield-MADA-portfolio\n\nlibrary(tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.2     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(performance)\n\n\nAttaching package: 'performance'\n\nThe following objects are masked from 'package:yardstick':\n\n    mae, rmse\n\n#Accessing data\ndatalocation <- here::here(\"fluanalysis\",\"Data\", \"CleanSymp.Rds\")\nfludata <- readRDS(datalocation)\nls(fludata)\n\n [1] \"AbPain\"            \"BodyTemp\"          \"Breathless\"       \n [4] \"ChestCongestion\"   \"ChestPain\"         \"ChillsSweats\"     \n [7] \"CoughIntensity\"    \"CoughYN\"           \"CoughYN2\"         \n[10] \"Diarrhea\"          \"EarPn\"             \"EyePn\"            \n[13] \"Fatigue\"           \"Headache\"          \"Hearing\"          \n[16] \"Insomnia\"          \"ItchyEye\"          \"Myalgia\"          \n[19] \"MyalgiaYN\"         \"NasalCongestion\"   \"Nausea\"           \n[22] \"Pharyngitis\"       \"RunnyNose\"         \"Sneeze\"           \n[25] \"SubjectiveFever\"   \"SwollenLymphNodes\" \"ToothPn\"          \n[28] \"Vision\"            \"Vomit\"             \"Weakness\"         \n[31] \"WeaknessYN\"        \"Wheeze\""
  },
  {
    "objectID": "fluanalysis/Code/modeleval.html#part-1-data-splitting",
    "href": "fluanalysis/Code/modeleval.html#part-1-data-splitting",
    "title": "Evaluation",
    "section": "Part 1: Data Splitting",
    "text": "Part 1: Data Splitting\n\n# Fix the random numbers by setting the seed \n# This enables the analysis to be reproducible when random numbers are used \nset.seed(1234)\n# Put 3/4 of the data into the training set \ndata_split <- initial_split(fludata, prop = 3/4)\n\n# Create data frames for the two sets:\ntrain_data <- training(data_split)\ntest_data  <- testing(data_split)"
  },
  {
    "objectID": "fluanalysis/Code/modeleval.html#workflow-creation-and-model-fitting",
    "href": "fluanalysis/Code/modeleval.html#workflow-creation-and-model-fitting",
    "title": "Evaluation",
    "section": "Workflow creation and model fitting",
    "text": "Workflow creation and model fitting\n\nCreate a simple recipe for a logistic model to our categorical outcome of interest.\n\n#recipe #1: Nausea predicted by all variables\nflu_recipe <- recipe(Nausea ~ ., data= train_data)\n\n#model: logistic regression using GLM engine\nlr_mod <- logistic_reg() %>% set_engine (\"glm\")\n\n#workflow: tying together model and recipe\n\nflu_wflow <- workflow() %>% add_model (lr_mod) %>% add_recipe (flu_recipe)\n\n#Printing workflow\nflu_wflow\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: logistic_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n0 Recipe Steps\n\n── Model ───────────────────────────────────────────────────────────────────────\nLogistic Regression Model Specification (classification)\n\nComputational engine: glm \n\n#Fitting the model to train dataset\nflu_fit <- \n  flu_wflow %>% \n  fit(data = train_data)\n\n#Looking at model output;\nflu_fit %>% \n  extract_fit_parsnip() %>% \n  tidy()\n\n# A tibble: 38 × 5\n   term                 estimate std.error statistic p.value\n   <chr>                   <dbl>     <dbl>     <dbl>   <dbl>\n 1 (Intercept)           -4.01       8.97     -0.447  0.655 \n 2 SwollenLymphNodesYes  -0.400      0.229    -1.75   0.0802\n 3 ChestCongestionYes     0.187      0.247     0.755  0.450 \n 4 ChillsSweatsYes        0.343      0.328     1.05   0.296 \n 5 NasalCongestionYes     0.384      0.290     1.32   0.185 \n 6 CoughYNYes            -0.256      0.590    -0.434  0.664 \n 7 SneezeYes              0.0384     0.246     0.156  0.876 \n 8 FatigueYes             0.148      0.448     0.331  0.741 \n 9 SubjectiveFeverYes     0.185      0.257     0.719  0.472 \n10 HeadacheYes            0.571      0.351     1.63   0.104 \n# … with 28 more rows\n\n\n\n\nUse the trained workflow to predict with unseen test data\n\n#Applying the model to unseen test data\npredict(flu_fit, test_data)\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\n\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 Yes        \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 173 more rows\n\nflu_aug <- \n  augment(flu_fit, test_data)\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\n# The data look like: \nflu_aug\n\n# A tibble: 183 × 35\n   SwollenLymph…¹ Chest…² Chill…³ Nasal…⁴ CoughYN Sneeze Fatigue Subje…⁵ Heada…⁶\n   <fct>          <fct>   <fct>   <fct>   <fct>   <fct>  <fct>   <fct>   <fct>  \n 1 Yes            Yes     Yes     Yes     No      Yes    Yes     Yes     Yes    \n 2 Yes            No      Yes     No      No      No     Yes     Yes     Yes    \n 3 No             No      Yes     No      Yes     Yes    Yes     Yes     Yes    \n 4 No             Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n 5 Yes            Yes     Yes     Yes     Yes     No     Yes     Yes     Yes    \n 6 No             Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n 7 No             No      Yes     No      Yes     No     Yes     Yes     Yes    \n 8 Yes            Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n 9 No             Yes     No      No      Yes     Yes    Yes     No      Yes    \n10 Yes            Yes     Yes     Yes     Yes     Yes    Yes     Yes     Yes    \n# … with 173 more rows, 26 more variables: Weakness <fct>, WeaknessYN <fct>,\n#   CoughIntensity <fct>, CoughYN2 <fct>, Myalgia <fct>, MyalgiaYN <fct>,\n#   RunnyNose <fct>, AbPain <fct>, ChestPain <fct>, Diarrhea <fct>,\n#   EyePn <fct>, Insomnia <fct>, ItchyEye <fct>, Nausea <fct>, EarPn <fct>,\n#   Hearing <fct>, Pharyngitis <fct>, Breathless <fct>, ToothPn <fct>,\n#   Vision <fct>, Vomit <fct>, Wheeze <fct>, BodyTemp <dbl>, .pred_class <fct>,\n#   .pred_No <dbl>, .pred_Yes <dbl>, and abbreviated variable names …\n\n#Plotting ROC curve;\nflu_aug %>% \n  roc_curve(truth = Nausea, .pred_No) %>% \n  autoplot()\n\n\n\n#Getting estimates;\nflu_aug %>% \n  roc_auc(truth = Nausea, .pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.740"
  },
  {
    "objectID": "fluanalysis/Code/modeleval.html#alternative-model",
    "href": "fluanalysis/Code/modeleval.html#alternative-model",
    "title": "Evaluation",
    "section": "Alternative Model",
    "text": "Alternative Model\n\n#New recipe: only predictor is RunnyNose; \nflu_recipe2 <- recipe(Nausea ~ RunnyNose, data= train_data)\n\n\n\n#New workflow\n\nflu_wflow2 <- workflow() %>% add_model (lr_mod) %>% add_recipe (flu_recipe2)\n\n#New fit\nflu_fit2 <- \n  flu_wflow2 %>% \n  fit(data = train_data)\n\n#Print new fit; \nflu_fit2 %>% \n  extract_fit_parsnip() %>% \n  tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)    -0.664     0.171    -3.89  0.000100\n2 RunnyNoseYes    0.101     0.200     0.506 0.613   \n\n#Conduct prediction on test data; \npredict(flu_fit2, test_data)\n\n# A tibble: 183 × 1\n   .pred_class\n   <fct>      \n 1 No         \n 2 No         \n 3 No         \n 4 No         \n 5 No         \n 6 No         \n 7 No         \n 8 No         \n 9 No         \n10 No         \n# … with 173 more rows\n\nflu_aug2 <- \n  augment(flu_fit2, test_data)\n\n# Output ROC curves and statistics; \nflu_aug2 %>% \n  roc_curve(truth = Nausea, .pred_No) %>% \n  autoplot()\n\n\n\nflu_aug2 %>% \n  roc_auc(truth = Nausea, .pred_No)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.488"
  },
  {
    "objectID": "fluanalysis/Code/modeleval.html#this-section-added-by-annabella-hines",
    "href": "fluanalysis/Code/modeleval.html#this-section-added-by-annabella-hines",
    "title": "Evaluation",
    "section": "This Section Added by Annabella Hines",
    "text": "This Section Added by Annabella Hines\n\n#recipe #2: Body Temperature predicted by all variables\nflu_recipe2 <- recipe(BodyTemp ~ ., data= train_data)\n\n#model: linear regression using GLM engine\nln_mod <- linear_reg() %>% set_engine (\"lm\")\n\n#workflow: tying together linear model and recipe 2\n\nflu_wflow2 <- workflow() %>% add_model(ln_mod) %>% add_recipe(flu_recipe2)\n\n#Printing workflow\nflu_wflow2\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n0 Recipe Steps\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n\n#Fitting the model to train dataset\nflu_fit2 <- \n  flu_wflow2 %>% \n  fit(data = train_data)\n\n#Looking at model output;\nflu_fit2 %>% \n  extract_fit_parsnip() %>% \n  tidy()\n\n# A tibble: 38 × 5\n   term                 estimate std.error statistic  p.value\n   <chr>                   <dbl>     <dbl>     <dbl>    <dbl>\n 1 (Intercept)           97.5        0.382   255.    0       \n 2 SwollenLymphNodesYes  -0.289      0.108    -2.67  0.00781 \n 3 ChestCongestionYes     0.135      0.115     1.18  0.239   \n 4 ChillsSweatsYes        0.199      0.148     1.34  0.179   \n 5 NasalCongestionYes    -0.199      0.130    -1.53  0.127   \n 6 CoughYNYes             0.328      0.273     1.20  0.230   \n 7 SneezeYes             -0.335      0.115    -2.91  0.00377 \n 8 FatigueYes             0.267      0.197     1.36  0.176   \n 9 SubjectiveFeverYes     0.458      0.121     3.77  0.000180\n10 HeadacheYes           -0.0328     0.151    -0.217 0.828   \n# … with 28 more rows\n\n\n\nUse the trained workflow to predict with unseen test data\n\n#Applying the model to unseen test data\npredict(flu_fit2, test_data)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\n\n# A tibble: 183 × 1\n   .pred\n   <dbl>\n 1  98.7\n 2  99.0\n 3  99.1\n 4  98.6\n 5  98.7\n 6  98.7\n 7  99.1\n 8  98.9\n 9  99.2\n10  99.1\n# … with 173 more rows\n\n#augment data\nflu_aug2 <- augment(flu_fit2, test_data)\n\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\"): prediction from a rank-deficient fit may be misleading\n\n#pull body temperatures and predictions\ntemps <- flu_aug2 %>% pull(BodyTemp)\npred <- flu_aug2 %>% pull(.pred)\n\n#run rmse\nrmse_vec(temps, pred)\n\n[1] 1.153632\n\n\nModel with only Runny Nose as predictor\n\n#Recipe for body temperature and runny nose\nflu_recipe_btrn<- recipe(BodyTemp ~ RunnyNose, data=train_data)\n\n#Modified workflow\nflu_btrn_workflow <- workflow() %>% add_model(ln_mod) %>% add_recipe(flu_recipe_btrn)\n\n#Fitting\nflu_btrn_fit<-flu_btrn_workflow %>% fit(data=train_data)\n\n\n#Check fit characteristics\nflu_btrn_fit %>% extract_fit_parsnip() %>% tidy()\n\n# A tibble: 2 × 5\n  term         estimate std.error statistic p.value\n  <chr>           <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)    99.1      0.0978   1014.    0     \n2 RunnyNoseYes   -0.229    0.115      -1.98  0.0477\n\n#Predictions\npredict(flu_btrn_fit, test_data)\n\n# A tibble: 183 × 1\n   .pred\n   <dbl>\n 1  98.9\n 2  99.1\n 3  99.1\n 4  98.9\n 5  98.9\n 6  98.9\n 7  99.1\n 8  98.9\n 9  99.1\n10  98.9\n# … with 173 more rows\n\n#Augment data\nbtrn_aug<-augment(flu_btrn_fit, test_data) \n\n#Pull temperatures and predictions\ntemps2 <- btrn_aug %>% pull(BodyTemp)\npred2 <- btrn_aug %>% pull(.pred)\n\n#Run RMSE\nrmse(temps2, pred2)\n\nWarning: Can't extract residuals from model.\n\n\nWarning: Response residuals not available to calculate mean square error. (R)MSE\n  is probably not reliable.\n\n\nthe condition has length > 1\n\n\n[1] NA"
  },
  {
    "objectID": "fluanalysis/Code/machinelearning.html",
    "href": "fluanalysis/Code/machinelearning.html",
    "title": "Machine Learning",
    "section": "",
    "text": "library(here)\n\nhere() starts at /Users/kellymccormickhatfield/Documents/MADA 2023/kellyhatfield-MADA-portfolio\n\nlibrary (tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.3.0      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary (tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.2     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n\nlibrary(rpart)\n\n\nAttaching package: 'rpart'\n\nThe following object is masked from 'package:dials':\n\n    prune\n\nlibrary(\"rpart.plot\")\nlibrary(\"glmnet\")\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nLoaded glmnet 4.1-7\n\nlibrary(\"ranger\")\nlibrary(vip)\n\n\nAttaching package: 'vip'\n\nThe following object is masked from 'package:utils':\n\n    vi\n\nFinalDataML<- readRDS(here(\"fluanalysis\",\"Data\",\"FinalDataML.Rds\"))"
  },
  {
    "objectID": "fluanalysis/Code/machinelearning.html#step-2-machine-learning",
    "href": "fluanalysis/Code/machinelearning.html#step-2-machine-learning",
    "title": "Machine Learning",
    "section": "Step 2: Machine Learning",
    "text": "Step 2: Machine Learning\n\nData Setup and Null Model Performance\n\n# Fix the random numbers by setting the seed \n# This enables the analysis to be reproducible when random numbers are used \nset.seed(123)\n\n\n# Put 70/30 of the data into the training set \ndata_split <- initial_split(FinalDataML, prop = 7/10)\n\n# Create data frames for the two sets:\ntrain_data <- training(data_split)\ntest_data  <- testing(data_split)\n\n\n# Create data frames for the two sets:\ntrain_data <- training(data_split)\ntest_data  <- testing(data_split)\n\n\n#5-fold cross-validation, 5 times repeated\nfold_ds<- vfold_cv(train_data, v = 5, repeats = 5, strata = BodyTemp)\n\n#Recipe for the data and fitting \ndata_recipe <- recipe(BodyTemp ~ ., data = train_data) %>%\n  step_dummy(all_nominal(), -all_outcomes()) \n\nnull_recipe <- recipe(BodyTemp ~ 1, data = train_data) %>%\n  step_dummy(all_nominal(), -all_outcomes()) \n\n#linear model\nln_model <- linear_reg() %>% set_engine(\"lm\") %>% set_mode(\"regression\")\n\n#Workflow\nnull_flow <- workflow() %>% add_model(ln_model) %>% add_recipe(null_recipe)\n\n#look at model\nnull_fit <- null_flow %>% fit(data=train_data) %>% fit_resamples(resamples=fold_ds)\n\n! Fold1, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold1, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold1, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold1, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold1, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\nnull_metrics<- collect_metrics(null_fit)\nnull_metrics\n\n# A tibble: 2 × 6\n  .metric .estimator   mean     n std_err .config             \n  <chr>   <chr>       <dbl> <int>   <dbl> <chr>               \n1 rmse    standard     1.22    25  0.0178 Preprocessor1_Model1\n2 rsq     standard   NaN        0 NA      Preprocessor1_Model1\n\n#RMSE: 1.21\n\n\n\nModel tuning and fitting\n\nTree\n\n#Model\ntune_spec <- \n  decision_tree(\n    cost_complexity = tune(),\n    tree_depth = tune()\n  ) %>% \n  set_engine(\"rpart\") %>% \n  set_mode(\"regression\")\n\n\n#Grid\ntree_grid <- grid_regular(cost_complexity(),\n                          tree_depth(),\n                          levels = 5)\n#create workflow\ntree_wf <- workflow() %>%\n  add_model(tune_spec) %>%\n  add_formula(BodyTemp ~ .)\n\n\n#Tuning grid cross validation\ntree_res <- \n  tree_wf %>% \n  tune_grid(\n    resamples = fold_ds,\n    grid = tree_grid\n    )\n\n! Fold1, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat1: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold1, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat2: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold1, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat3: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold1, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat4: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold1, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold2, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold3, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold4, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\n\n! Fold5, Repeat5: internal: A correlation computation is required, but `estimate` is constant and ha...\n\ntree_res %>% \n  collect_metrics()\n\n# A tibble: 50 × 8\n   cost_complexity tree_depth .metric .estimator     mean     n  std_err .config\n             <dbl>      <int> <chr>   <chr>         <dbl> <int>    <dbl> <chr>  \n 1    0.0000000001          1 rmse    standard     1.20      25  0.0173  Prepro…\n 2    0.0000000001          1 rsq     standard     0.0485    25  0.00488 Prepro…\n 3    0.0000000178          1 rmse    standard     1.20      25  0.0173  Prepro…\n 4    0.0000000178          1 rsq     standard     0.0485    25  0.00488 Prepro…\n 5    0.00000316            1 rmse    standard     1.20      25  0.0173  Prepro…\n 6    0.00000316            1 rsq     standard     0.0485    25  0.00488 Prepro…\n 7    0.000562              1 rmse    standard     1.20      25  0.0173  Prepro…\n 8    0.000562              1 rsq     standard     0.0485    25  0.00488 Prepro…\n 9    0.1                   1 rmse    standard     1.22      25  0.0178  Prepro…\n10    0.1                   1 rsq     standard   NaN          0 NA       Prepro…\n# … with 40 more rows\n\n#Look at the best model \ntree_res %>%\n  show_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 8\n  cost_complexity tree_depth .metric .estimator  mean     n std_err .config     \n            <dbl>      <int> <chr>   <chr>      <dbl> <int>   <dbl> <chr>       \n1    0.0000000001          1 rmse    standard    1.20    25  0.0173 Preprocesso…\n2    0.0000000178          1 rmse    standard    1.20    25  0.0173 Preprocesso…\n3    0.00000316            1 rmse    standard    1.20    25  0.0173 Preprocesso…\n4    0.000562              1 rmse    standard    1.20    25  0.0173 Preprocesso…\n5    0.1                   1 rmse    standard    1.22    25  0.0178 Preprocesso…\n\n#rmse = 1.199\n\n#Select best tree\nbest_tree <- tree_res %>%\n  select_best(n=1)\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n#Final model from best tree\nfinal_wf <- \n  tree_wf %>% \n  finalize_workflow(best_tree)\n\n\n#Fit \nfinal_fit <- \n  final_wf %>%\n  fit(train_data) \n\n\nfinal_fit\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Formula\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\nBodyTemp ~ .\n\n── Model ───────────────────────────────────────────────────────────────────────\nn= 510 \n\nnode), split, n, deviance, yval\n      * denotes terminal node\n\n1) root 510 767.6997 98.98529  \n  2) SubjectiveFever=No 154 101.9304 98.55974 *\n  3) SubjectiveFever=Yes 356 625.8163 99.16938 *\n\n#Plot final fit\nrpart.plot(extract_fit_parsnip(final_fit)$fit)\n\nWarning: Cannot retrieve the data used to build the model (so cannot determine roundint and is.binary for the variables).\nTo silence this warning:\n    Call rpart.plot with roundint=FALSE,\n    or rebuild the rpart model with model=TRUE.\n\n\n\n\n\n\n\nLasso\n\n#The steps (block of code) you should have here are 1) model specification, 2) workflow definition, 3) tuning grid specification and 4) tuning using cross-validation and the tune_grid() function.\n\n\n\n#Build  model\nlasso_mod <- \n  linear_reg(penalty = tune(), mixture = 1) %>% \n  set_engine(\"glmnet\")\n\n#Create workflow using data recipe from above\nlasso_workflow <- \n  workflow() %>% \n  add_model(lasso_mod) %>% \n  add_recipe(data_recipe)\n\n# tuning grid\nlasso_grid <- tibble(penalty = 10^seq(-4, -1, length.out = 30))\n#Bottom 5 penalty values\nlasso_grid %>% top_n(-5)\n\nSelecting by penalty\n\n\n# A tibble: 5 × 1\n   penalty\n     <dbl>\n1 0.0001  \n2 0.000127\n3 0.000161\n4 0.000204\n5 0.000259\n\n#Top 5 penalty values\nlasso_grid %>% top_n(5)\n\nSelecting by penalty\n\n\n# A tibble: 5 × 1\n  penalty\n    <dbl>\n1  0.0386\n2  0.0489\n3  0.0621\n4  0.0788\n5  0.1   \n\n#Using tuning grids\nlr_res <- \n  lasso_workflow %>% \n  tune_grid(resamples = fold_ds,\n            grid = lasso_grid,\n            control = control_grid(verbose = FALSE, save_pred = TRUE),\n            metrics = NULL)\n\nlr_res %>% collect_metrics()\n\n# A tibble: 60 × 7\n    penalty .metric .estimator   mean     n std_err .config              \n      <dbl> <chr>   <chr>       <dbl> <int>   <dbl> <chr>                \n 1 0.0001   rmse    standard   1.21      25 0.0193  Preprocessor1_Model01\n 2 0.0001   rsq     standard   0.0567    25 0.00650 Preprocessor1_Model01\n 3 0.000127 rmse    standard   1.21      25 0.0193  Preprocessor1_Model02\n 4 0.000127 rsq     standard   0.0567    25 0.00650 Preprocessor1_Model02\n 5 0.000161 rmse    standard   1.21      25 0.0193  Preprocessor1_Model03\n 6 0.000161 rsq     standard   0.0567    25 0.00650 Preprocessor1_Model03\n 7 0.000204 rmse    standard   1.21      25 0.0193  Preprocessor1_Model04\n 8 0.000204 rsq     standard   0.0567    25 0.00650 Preprocessor1_Model04\n 9 0.000259 rmse    standard   1.21      25 0.0193  Preprocessor1_Model05\n10 0.000259 rsq     standard   0.0567    25 0.00650 Preprocessor1_Model05\n# … with 50 more rows\n\nlr_res %>% show_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 7\n  penalty .metric .estimator  mean     n std_err .config              \n    <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                \n1  0.0621 rmse    standard    1.18    25  0.0179 Preprocessor1_Model28\n2  0.0788 rmse    standard    1.18    25  0.0176 Preprocessor1_Model29\n3  0.0489 rmse    standard    1.18    25  0.0182 Preprocessor1_Model27\n4  0.0386 rmse    standard    1.18    25  0.0183 Preprocessor1_Model26\n5  0.1    rmse    standard    1.19    25  0.0175 Preprocessor1_Model30\n\n#Selects best performing model\nbest_lasso <- lr_res %>% select_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n#rmse = 1.182 -- 1.1815\n\n#Final Model\nlasso_final_wf <- \n  lasso_workflow %>% finalize_workflow(best_lasso)\nlasso_final_fit <- lasso_final_wf %>% fit(train_data) \n\n#plot\nx <- extract_fit_engine(lasso_final_fit)\nplot(x, \"lambda\")\n\n\n\n\n\n\nRandom Forest\n\n#The steps (block of code) you should have here are 1) model specification, 2) workflow definition, 3) tuning grid specification and 4) tuning using cross-validation and the tune_grid() function.\n\n\n#Build \ncores <- parallel::detectCores()\ncores\n\n[1] 8\n\nrandomforest_mod <-  rand_forest(mtry = tune(), min_n = tune(), trees = 1000) %>% \n  set_engine(\"ranger\", importance = \"impurity\", num.threads = cores) %>% set_mode(\"regression\")\n\n#Workflow\nrandomforest_wf <-  workflow() %>% add_model(randomforest_mod) %>% add_recipe(data_recipe)\n\n#Tune\nextract_parameter_set_dials(randomforest_mod)\n\nCollection of 2 parameters for tuning\n\n identifier  type    object\n       mtry  mtry nparam[?]\n      min_n min_n nparam[+]\n\nModel parameters needing finalization:\n   # Randomly Selected Predictors ('mtry')\n\nSee `?dials::finalize` or `?dials::update.parameters` for more information.\n\n#Tune grid\nrandomforest_res <- randomforest_wf %>%  tune_grid(fold_ds, grid = 25, control = control_grid(save_pred = TRUE), metrics = NULL)\n\ni Creating pre-processing data to finalize unknown parameter: mtry\n\n#Best forest\nrandomforest_res %>% show_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n\n# A tibble: 5 × 8\n   mtry min_n .metric .estimator  mean     n std_err .config              \n  <int> <int> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                \n1     9    33 rmse    standard    1.19    25  0.0176 Preprocessor1_Model24\n2     3    25 rmse    standard    1.19    25  0.0177 Preprocessor1_Model02\n3     4    19 rmse    standard    1.19    25  0.0177 Preprocessor1_Model25\n4    13    27 rmse    standard    1.20    25  0.0176 Preprocessor1_Model20\n5    20    39 rmse    standard    1.20    25  0.0175 Preprocessor1_Model01\n\nrandomforest_best <- randomforest_res %>% select_best()\n\nWarning: No value of `metric` was given; metric 'rmse' will be used.\n\n# workflow\nrandomforest_fwf<- randomforest_wf %>% finalize_workflow(randomforest_best)\n\n#Final fit\nranforest_fin <- randomforest_fwf %>% fit(train_data)\nranforest_fin %>% extract_fit_parsnip() %>% vip(num_features = 28)\n\n\n\nfun <- extract_fit_engine(ranforest_fin)\nvip(fun)\n\n\n\n#rmse 1.19\n\n\n\n\nFinal Model\nWe select LASSO model because it had the highest RMSE.\nWe will run the LASSO model on the split data\n\nlasso_test_data <- \n  lasso_final_wf %>%\n  last_fit(data_split) \nlasso_test_data %>%\n   collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard      1.10   Preprocessor1_Model1\n2 rsq     standard      0.0428 Preprocessor1_Model1\n\n#RMSE 1.100"
  },
  {
    "objectID": "fluanalysis/Code/wrangling.html#step-3-manipulating-data",
    "href": "fluanalysis/Code/wrangling.html#step-3-manipulating-data",
    "title": "wrangling",
    "section": "Step 3: Manipulating Data",
    "text": "Step 3: Manipulating Data\n\nCategorical/Ordinal predictors\n\n\n\n\n\nDeleting Repetitive Variables\n\nsummary(raw_data3)\n\n SwollenLymphNodes ChestCongestion ChillsSweats NasalCongestion CoughYN  \n No :418           No :323         No :130      No :167         No : 75  \n Yes:312           Yes:407         Yes:600      Yes:563         Yes:655  \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n Sneeze    Fatigue   SubjectiveFever Headache      Weakness   WeaknessYN\n No :339   No : 64   No :230         No :115   None    : 49   No : 49   \n Yes:391   Yes:666   Yes:500         Yes:615   Mild    :223   Yes:681   \n                                               Moderate:338             \n                                               Severe  :120             \n                                                                        \n                                                                        \n  CoughIntensity CoughYN2      Myalgia    MyalgiaYN RunnyNose AbPain   \n None    : 47    No : 47   None    : 79   No : 79   No :211   No :639  \n Mild    :154    Yes:683   Mild    :213   Yes:651   Yes:519   Yes: 91  \n Moderate:357              Moderate:325                                \n Severe  :172              Severe  :113                                \n                                                                       \n                                                                       \n ChestPain Diarrhea  EyePn     Insomnia  ItchyEye  Nausea    EarPn    \n No :497   No :631   No :617   No :315   No :551   No :475   No :568  \n Yes:233   Yes: 99   Yes:113   Yes:415   Yes:179   Yes:255   Yes:162  \n                                                                      \n                                                                      \n                                                                      \n                                                                      \n Hearing   Pharyngitis Breathless ToothPn   Vision    Vomit     Wheeze   \n No :700   No :119     No :436    No :565   No :711   No :652   No :510  \n Yes: 30   Yes:611     Yes:294    Yes:165   Yes: 19   Yes: 78   Yes:220  \n                                                                         \n                                                                         \n                                                                         \n                                                                         \n    BodyTemp     \n Min.   : 97.20  \n 1st Qu.: 98.20  \n Median : 98.50  \n Mean   : 98.94  \n 3rd Qu.: 99.30  \n Max.   :103.10  \n\n #Delete Variables with yes/no observations that  are represented with a different variable\nFludata1 <- select(raw_data3,-c(CoughYN, WeaknessYN, CoughYN2, MyalgiaYN))\n\n#Drop variables <50 Y/N\n\nFludata2 <- select(Fludata1, -c(Hearing, Vision))"
  },
  {
    "objectID": "tidytuesday_exercise2.html",
    "href": "tidytuesday_exercise2.html",
    "title": "Tidy Tuesday Exercise 2",
    "section": "",
    "text": "This weeks data is called: US Egg Production Data 2007-2021 and comes from The Humane League Labs US Egg Production Dataset.\n\n\n\n# Get the Data\n\n# Read in directly\n\neggproduction  <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-11/egg-production.csv')\n\nRows: 220 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): prod_type, prod_process, source\ndbl  (2): n_hens, n_eggs\ndate (1): observed_month\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncagefreepercentages <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-11/cage-free-percentages.csv')\n\nRows: 96 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): source\ndbl  (2): percent_hens, percent_eggs\ndate (1): observed_month\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#get a summary of data\nsummary(eggproduction)\n\n observed_month        prod_type         prod_process           n_hens         \n Min.   :2016-07-31   Length:220         Length:220         Min.   : 13500000  \n 1st Qu.:2017-09-30   Class :character   Class :character   1st Qu.: 17284500  \n Median :2018-11-15   Mode  :character   Mode  :character   Median : 59939500  \n Mean   :2018-11-14                                         Mean   :110839873  \n 3rd Qu.:2019-12-31                                         3rd Qu.:125539250  \n Max.   :2021-02-28                                         Max.   :341166000  \n     n_eggs             source         \n Min.   :2.981e+08   Length:220        \n 1st Qu.:4.240e+08   Class :character  \n Median :1.155e+09   Mode  :character  \n Mean   :2.607e+09                     \n 3rd Qu.:2.963e+09                     \n Max.   :8.601e+09                     \n\nsummary(cagefreepercentages)\n\n observed_month        percent_hens    percent_eggs       source         \n Min.   :2007-12-31   Min.   : 3.20   Min.   : 9.557   Length:96         \n 1st Qu.:2017-05-23   1st Qu.:13.46   1st Qu.:14.521   Class :character  \n Median :2018-11-15   Median :17.30   Median :16.235   Mode  :character  \n Mean   :2018-05-12   Mean   :17.95   Mean   :17.095                     \n 3rd Qu.:2020-02-28   3rd Qu.:23.46   3rd Qu.:19.460                     \n Max.   :2021-02-28   Max.   :29.20   Max.   :24.546                     \n                                      NA's   :42                         \n\n#Add some libraries\n\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.3.0      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n✔ purrr   1.0.1      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\n\n\n\nI am copying and pasting the data dictionaries from the Tidy Tuesday github for reference here:\n\n\n\n\n\n\n\n\n\n\nvariable\nclass\ndescription\n\n\n\n\nobserved_month\ndouble\nMonth in which report observations are collected,Dates are recorded in ISO 8601 format YYYY-MM-DD\n\n\nprod_type\ncharacter\ntype of egg product: hatching, table eggs\n\n\nprod_process\ncharacter\ntype of production process and housing: cage-free (organic), cage-free (non-organic), all. The value ‘all’ includes cage-free and conventional housing.\n\n\nn_hens\ndouble\nnumber of hens produced by hens for a given month-type-process combo\n\n\nn_eggs\ndouble\nnumber of eggs producing eggs for a given month-type-process combo\n\n\nsource\ncharacter\nOriginal USDA report from which data are sourced. Values correspond to titles of PDF reports. Date of report is included in title.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvariable\nclass\ndescription\n\n\n\n\nobserved_month\ndouble\nMonth in which report observations are collected,Dates are recorded in ISO 8601 format YYYY-MM-DD\n\n\npercent_hens\ndouble\nobserved or computed percentage of cage-free hens relative to all table-egg-laying hens\n\n\npercent_eggs\ndouble\ncomputed percentage of cage-free eggs relative to all table eggs,This variable is not available for data sourced from the Egg Markets Overview report\n\n\nsource\ncharacter\nOriginal USDA report from which data are sourced. Values correspond to titles of PDF reports. Date of report is included in title.\n\n\n\n\n\n\n\n#Some cleaning\n\n#Separating out hatching and table eggs\n\nhatching_eggsnhens <- subset(eggproduction, prod_type=='hatching eggs',c(observed_month, prod_process, n_eggs, n_hens)) \nhatching_eggsnhens$eggsperhen <- hatching_eggsnhens$n_eggs / hatching_eggsnhens$n_hens\n\nhatching_eggsnhens\n\n# A tibble: 55 × 5\n   observed_month prod_process     n_eggs   n_hens eggsperhen\n   <date>         <chr>             <dbl>    <dbl>      <dbl>\n 1 2016-07-31     all          1147000000 57975000       19.8\n 2 2016-08-31     all          1142700000 57595000       19.8\n 3 2016-09-30     all          1093300000 57161000       19.1\n 4 2016-10-31     all          1126700000 56857000       19.8\n 5 2016-11-30     all          1096600000 57116000       19.2\n 6 2016-12-31     all          1132900000 57750000       19.6\n 7 2017-01-31     all          1123400000 57991000       19.4\n 8 2017-02-28     all          1014500000 58286000       17.4\n 9 2017-03-31     all          1128500000 58735000       19.2\n10 2017-04-30     all          1097200000 59072000       18.6\n# … with 45 more rows\n\ntable_eggsnhens <- subset(eggproduction, prod_type=='table eggs',c(observed_month,prod_process, n_eggs, n_hens)) \ntable_eggsnhens$eggsperhen <- table_eggsnhens$n_eggs / table_eggsnhens$n_hens\n\ntablehens1<- subset(eggproduction, prod_type=='table eggs',c(observed_month, prod_process, n_hens))  \ntablehens2 <- tablehens1 %>% pivot_wider(names_from = prod_process, values_from = n_hens)%>% rename(\"all-table-n_hens\" = \"all\", \"cage-free-organic-table-n_hens\" = \"cage-free (organic)\",  \"cage-free-non-organic-table-n_hens\" = \"cage-free (non-organic)\"       )\n\n\ntableeggs1 <- subset(eggproduction, prod_type=='table eggs',c(observed_month, prod_process, n_eggs))  \ntableeggs2 <- tableeggs1 %>% pivot_wider(names_from = prod_process, values_from = n_eggs)%>% rename(\"n_eggs_all\" = \"all\", \"n_eggs_cfo\" = \"cage-free (organic)\",  \"n_eggs_cfno\" = \"cage-free (non-organic)\")\n\n\n\ncombined_data <-full_join(hatching_eggsnhens, table_eggsnhens, by = \"observed_month\")\n\n\n\ncleandata <-full_join(combined_data, cagefreepercentages, by = \"observed_month\") %>% rename(\"percent all table egg laying hens cage free\" = \"percent_hens\", \"percent all table eggs organic\" = \"percent_eggs\")                                                               \n\n\n\n\n\n\n\n\nggplot(hatching_eggsnhens, aes(x=observed_month, y=eggsperhen, color=\"pink\")) +geom_path() +geom_point()\n\n\n\n\nIt appears certain months have low egg production\n\n#format as month\nhatching_eggsnhens$month <- format(as.Date(hatching_eggsnhens$observed_month, format=\"%d/%m/%Y\"),\"%m\")\n\nggplot(hatching_eggsnhens, aes(x =month , y = eggsperhen)) + geom_boxplot(fill = \"grey92\") + geom_point(size = 2, alpha = .15,position = position_jitter(seed = 1, width = .2)) \n\n\n\n\nLooks like something is weird in February: the median # of eggs per month is closer to 17, compared to >18 in all other months. Maybe this is due to an increased desire for more table eggs in those months.\nMaybe we’ll use this in our model. But lets also explore some table egg information.\n\n\n\n\ntable_eggsnhensall <-subset(table_eggsnhens,prod_process=='all')\n\nggplot(table_eggsnhensall, aes(x=observed_month, y=eggsperhen, color=\"pink\")) +geom_path() +geom_point()\n\n\n\n#format as month\ntable_eggsnhensall$month <- format(as.Date(table_eggsnhensall$observed_month, format=\"%d/%m/%Y\"),\"%m\")\n\nggplot(table_eggsnhensall, aes(x =month , y = eggsperhen)) + geom_boxplot(fill = \"grey92\") + geom_point(size = 2, alpha = .15,position = position_jitter(seed = 1, width = .2)) \n\n\n\n\nTHe number of eggs per hen for table eggs is also lower in February! Strange. Its also interesting to note that the number of eggs per hen is much higher for table eggs than hatching eggs!\n\n\n\n\nggplot(tableeggs1, aes(x=observed_month, y=n_eggs, \n                      group=prod_process, color=prod_process)) +geom_path() +geom_point()\n\n\n\n\nSome key take aways:\n\nInterestingly, looks like all table eggs was on an upward trend… until 2020.\nCage free non-organic eggs seem to be increasing production faster than organic eggs\n\nSome potential analyses:\n\nPotential analysis: ITS model looking at linear trend in egg production until March 2020 (start of COVID-19 pandemic)\nDifference in Difference model looking at slope of organic versus non-organic eggs\n\nLets look at a pre COVID-19 and post-COVID-19\n\n#Add covid indicator for any month in March 2020 forward\n\ntableeggs2$cdate <- as.Date(\"2020-02-28\")\ntableeggs2$covid_ind = ifelse(tableeggs2$observed_month>tableeggs2$cdate,1,0)\ntableeggs2$n_eggs_all_m <- tableeggs2$n_eggs_all/1000000\n\n\ntableeggs2$mindate = min(tableeggs2$observed_month)\ntableeggs2$daysmodel = as.numeric (tableeggs2$observed_month-tableeggs2$mindate)\ntableeggs2$interaction <- ifelse(tableeggs2$observed_month > tableeggs2$cdate,tableeggs2$daysmodel,0)\n\n#Plotting interrupted time series model\nggplot(tableeggs2, aes(x=observed_month, y=n_eggs_all_m, \n                      group=factor(covid_ind),\n                      color=factor(covid_ind))) +geom_point() + geom_vline(xintercept = tableeggs2$cdate, linetype=\"dashed\", \n                color = \"gray2\", linewidth=1)+ geom_smooth(method=\"lm\", se=FALSE) + ggtitle(\"Plot of table eggs produced over time\") + xlab(\"Date\") + ylab(\"Number of eggs (in millions)\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nWe are going to take an interrupted time series approach to understand if the linear trend in egg production changes beginning in March 2020, at the start of COVID-19 pandemic.\n\n\n\n\nData cleaning for the model: See above.\nAssign 70% of data to training and 30% to test (make assignments by COVID_ind status so we have the same amount of data pre-post intervention)\nCalculate linear regression with the following covariates: observed_month(month in time series), covid_ind (a 0/1 indicator variable for if in teh COVID-19 time period), and an interaction between covid_ind and observed_mont\nInterpretation will be as follows:\n\nParameter (observed_month): Slope (Trend) before the pandemic\nParameter estimate (COVID_IND): Immediate change in egg production at start of pandemic\nParameter estimate (interaction term): Change in slope (trend) during the pandemic\n\nRepeat model on test data to see if interpretation of parameter estimates are similar\nSummarize findings\n\n\n#Modeling Approach\nlibrary(tidyverse)\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n\n\n✔ broom        1.0.2     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n\nlibrary(performance)\n\n\nAttaching package: 'performance'\n\n\nThe following objects are masked from 'package:yardstick':\n\n    mae, rmse\n\nset.seed(777)\n\ndata_split <- initial_split(tableeggs2, prop = 2/3, strata=covid_ind)\n\n# Create data frames for the two sets:\ntrain_data <- training(data_split)\n#36 obs\ntest_data  <- testing(data_split)\n#20 obs\n\nmodel_recipe <- recipe(n_eggs_all_m ~ daysmodel + covid_ind + interaction, data= train_data)\n\n#model: linear regression using GLM engine\nln_mod <- linear_reg() %>% set_engine (\"lm\")\nwflow <- workflow() %>% add_model(ln_mod) %>% add_recipe(model_recipe)\n\n#Fitting the model to train dataset\nmodel_fit_train <-  wflow %>% fit(data = train_data)\n#Looking at model output;\nmodel_fit_train %>% \n  extract_fit_parsnip() %>% \n  tidy()\n\n# A tibble: 4 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept) 7373.       85.1      86.6   1.51e-38\n2 daysmodel      0.749     0.120     6.22  6.55e- 7\n3 covid_ind   -653.     1205.       -0.542 5.92e- 1\n4 interaction    0.180     0.831     0.216 8.30e- 1\n\n#Applying the model to unseen test data\npredict(model_fit_train, test_data)\n\n# A tibble: 20 × 1\n   .pred\n   <dbl>\n 1 7419.\n 2 7464.\n 3 7601.\n 4 7646.\n 5 7738.\n 6 7761.\n 7 7965.\n 8 7988.\n 9 8011.\n10 8057.\n11 8078.\n12 8147.\n13 8170.\n14 8262.\n15 8307.\n16 7991.\n17 8048.\n18 8133.\n19 8190.\n20 8219.\n\n#augment data\naug <- augment(model_fit_train, test_data)\n\n#pull month and egg prediction\nobserved_daysmodel <- aug %>% pull(daysmodel)\npred <- aug %>% pull(.pred)\n\nggplot(aug, aes(x=.pred, y= n_eggs_all_m, group=factor(covid_ind), color=factor(covid_ind))) +\n  geom_point() +\n  geom_abline(intercept=0, slope=1) +\n  labs(x='Predicted Values', y='Actual Values', title='Predicted vs. Actual Values')\n\n\n\n#run rmse\nrmse_vec(observed_daysmodel, pred)\n\n[1] 7053.268\n\n\n\n\n\nFrom our training dataset we estimate an increase of 0.74 million eggs per day prior to COVID-19. At the start of COVID-19 we saw an immediate decrease of 650 million eggs per day! Then, after COVID-19 we saw an increased trend of 0.18 million additional eggs per day (for a post-COVID-19 trend of 0.92 million more eggs produced each day!!).\n\n\n\nIn our plot of observed versus predicted values for the test data we feel confident that our model predicted well. There was potentially less good prediction in teh COVID-19 era than the pre-COVID-19 era but that is likely due to the small sample of data in that period for the model."
  }
]